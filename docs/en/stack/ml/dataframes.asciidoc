[[ml-dataframes]]
=== {dataframes-cap}

{dataframes-cap} feature is available in 7.2 and later.

A _{dataframe}_ is a transformation of a dataset by certain rules defined during
the creation of the {dataframe}. You can think of it like a spreadsheet or a 
data table that makes your data ready to be analyzed and organized.

{es} datasets consist of individual documents that have fields and
values in each field. This architecture makes search easy but on the other hand, 
makes it hard to run analyses that require reorganized or summarized fields of 
the dataset. {ml-cap} analyses need clean and transformed data and that is the 
point where {dataframes} come into play.

To transform the data into a {dataframe}, you need to define a _pivot_. During
pivoting, you create a set of features that transform the dataset into a
different, more digestible format to make calculations on your data. Pivoting
results in a summary of your dataset (which is the {dataframe} itself).

Defining a pivot consist of two main parts. First, you select one or more fields 
that your dataset will be grouped by. Principally you can select categorical 
fields (terms) for grouping. You can also select numerical fields, in this case, 
the field values will be bucketed using an interval you specify. The analysis
will run against every bucket that was created this way.

The second step is selecting one or more aggregations to perform analysis over
the dataset. When using aggregations, you practically ask questions about the 
dataset to analyze the data. There are different types of aggregations, each with 
its own purpose and output. You can learn more about the supported aggregations 
and group-by fields here (!add a link!).

As an optional step, it's also possible to add a query to further limit the 
scope of the aggregation.

IMPORTANT: In 7.2, you can build {dataframes} on the top of a static dataset. 
When new data comes into the index, you have to perform the transformation again 
on the altered data. {con-dataframes-cap} will be introduced in 7.3.

example - to do

IMPORTANT: Creating a {dataframe} leaves your dataset intact. It does not amend
the dataset itself.