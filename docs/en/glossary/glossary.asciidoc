[[terms]]
== Terminology

<<a-glos>> | <<b-glos>> | <<c-glos>> | <<d-glos>> | <<e-glos>> | <<f-glos>> | <<g-glos>> | <<h-glos>> | <<i-glos>> | <<j-glos>> | <<k-glos>> | <<l-glos>> | <<m-glos>> | <<n-glos>> | <<o-glos>> | <<p-glos>> | <<q-glos>> | <<r-glos>> | <<s-glos>> | <<t-glos>> | <<u-glos>> | <<v-glos>> | <<w-glos>> | X | Y | <<z-glos>>

[discrete]
[[a-glos]]
=== A

[[glossary-action]] action::
The rule-specific response that occurs when an alerting <<glossary-rule,rule>>
fires. A rule can have multiple actions. See
{kibana-ref}/action-types.html[Connectors and actions].
//Source: Kibana

[[glossary-admin-console]] administration console::
A component of {ece} that provides the API server for the
<<glossary-cloud-ui,Cloud UI>>. Also syncs cluster and allocator data from
ZooKeeper to {es}.
//Source: Cloud

[[glossary-advanced-settings]] Advanced Settings::
Enables you to control the appearance and behavior of {kib}
by setting the date format, default index, and other attributes.
Part of {kib} Stack Management.
See {kibana-ref}/advanced-options.html[Advanced Settings].
//Source: Kibana

[[glossary-agent-policy]] Agent policy::
A collection of inputs and settings that defines the data to be collected by {agent}.
An agent policy can be applied to a single agent or shared by a group of agents;
this makes it easier to manage many agents at scale.
See {fleet-guide}/agent-policy.html[{agent} policies].
//Source: Observability

[[glossary-alias]] alias::
Secondary name for a group of <<glossary-data-stream,data streams>> or
<<glossary-index,indices>>. Most {es} APIs accept an alias in place of a data
stream or index. See {ref}/alias.html[Aliases].
//Source: Elasticsearch

[[glossary-allocator]] allocator::
Manages hosts that contain {es} and {kib} nodes. Controls the lifecycle of these
nodes by creating new <<glossary-container,containers>> and managing the nodes
within these containers when requested. Used to scale the capacity of your {ece}
installation.
//Source: Cloud

[[glossary-analysis]] analysis::
Process of converting unstructured <<glossary-text,text>> into a format
optimized for search. See {ref}/analysis.html[Text analysis].
//Source: Elasticsearch

[[glossary-annotation]] annotation::
A way to augment a data display with descriptive domain knowledge.
//Source: Kibana

[[glossary-anomaly-detection-job]] {anomaly-job}::
{anomaly-jobs-cap} contain the configuration information and metadata
necessary to perform an analytics task. See
{ml-docs}/ml-jobs.html[{ml-jobs-cap}] and the
{ref}/ml-put-job.html[create {anomaly-job} API].
//Source: Machine learning

[[glossary-api-key]] API key::
Unique identifier for authentication in {es}. When
{ref}/encrypting-communications.html[transport layer security (TLS)] is enabled,
all requests must be authenticated using an API key or a username and password.
See the {ref}/security-api-create-api-key.html[Create API key API].
//Source: Elasticsearch

[[glossary-apm-agent]] APM agent::
An open-source library, written in the same language as your service,
which <<glossary-instrumentation,instruments>> your code and collects performance data
and errors at runtime.
//Source: Observability

[[glossary-apm-server]] APM Server::
An open-source application that receives data from <<glossary-apm-agent,APM agents>> and sends
it to {es}.
//Source: Observability

[[glossary-app]] app::
A top-level {kib} component that is accessed through the side navigation.
Apps include core {kib} components such as Discover and Dashboard,
solutions like {observability} and Security, and special-purpose tools
like Maps and {stack-manage-app}.
//Source: Kibana

[[glossary-auto-follow-pattern]] auto-follow pattern::
<<glossary-index-pattern,Index pattern>> that automatically configures new
<<glossary-index,indices>> as <<glossary-follower-index,follower indices>> for
<<glossary-ccr,{ccr}>>. See {ref}/ccr-auto-follow.html[Manage auto-follow
patterns].
//Source: Elasticsearch

[[glossary-zone]] availability zone::
Contains resources available to a {ece} installation that are isolated from
other availability zones to safeguard against failure. Could be a rack, a server
zone or some other logical constraint that creates a failure boundary. In a
highly available cluster, the nodes of a cluster are spread across two or three
availability zones to ensure that the cluster can survive the failure of an
entire availability zone. Also see
{ece-ref}/ece-ha.html[Fault Tolerance (High Availability)].
//Source: Cloud

[discrete]
[[b-glos]]
=== B

[[glossary-basemap]] basemap::
The background detail necessary to orient the location of a map.
//Source: Kibana

[[glossary-beats-runner]] beats runner::
Used to send {filebeat} and {metricbeat} information to the logging cluster.
//Source: Cloud

[[glossary-ml-bucket]] bucket::
. A set of documents in {kib} that have certain characteristics in common. For
example, matching documents might be bucketed by color, distance, or date range.
//Source: Kibana
. The {ml-features} also use the concept of a bucket to divide the time series
into batches for processing. The _bucket span_ is part of the configuration
information for {anomaly-jobs}. It defines the time interval that is used to
summarize and model the data. This is typically between 5 minutes to 1 hour and
it depends on your data characteristics. When you set the bucket span, take into
account the granularity at which you want to analyze, the frequency of the input
data, the typical duration of the anomalies, and the frequency at which alerting
is required.
//Source: Machine learning

[[glossary-bucket-aggregation]] bucket aggregation::
An aggregation that creates buckets of documents. Each bucket is associated with
a criterion (depending on the aggregation type), which determines whether or not
a document in the current context falls into the bucket.
//Source: Kibana

[discrete]
[[c-glos]]
=== C

[[glossary-canvas]] Canvas::
Enables you to create presentations and infographics that pull live data
directly from {es}. See {kibana-ref}/canvas.html[Canvas].
//Source: Kibana

[[glossary-canvas-language]] Canvas expression language::
A pipeline-based expression language for manipulating and visualizing data.
Includes dozens of functions and other capabilities, such as table transforms,
type casting, and sub-expressions. Supports TinyMath functions for complex math
calculations. See
{kibana-ref}/canvas-function-reference.html[Canvas function reference].

[[glossary-certainty]] certainty::
Specifies how many documents must contain a pair of terms before it is
considered a useful connection in a graph.
//Source: Kibana

[[glossary-client-forwarder]] client forwarder::
Used for secure internal communications between various components of {ece} and
ZooKeeper.
//Source: Cloud

[[glossary-cloud-ui]] Cloud UI::
Provides web-based access to manage your {ece} installation, supported by the
<<glossary-admin-console,administration console>>.
//Source: Cloud

[[glossary-cluster]] cluster::
. A group of one or more connected {es} <<glossary-node,nodes>>. See
{ref}/scalability.html[Clusters, nodes, and shards].
//Source: Elasticsearch
. A layer type and display option in the *Maps* application. Clusters display a
cluster symbol across a grid on the map, one symbol per grid cluster. The
cluster location is the weighted centroid for all documents in the grid cell.
//Source: Kibana

[[glossary-codec-plugin]] codec plugin::
A {ls} <<glossary-plugin,plugin>> that changes the data representation
of an <<glossary-event,event>>. Codecs are essentially stream filters that
can operate as part of an input or output. Codecs enable you to separate the
transport of messages from the serialization process. Popular codecs include
json, msgpack, and plain (text).
//Source: Logstash

[[glossary-cold-phase]] cold phase::
Third possible phase in the <<glossary-index-lifecycle,index lifecycle>>. In the
cold phase, data is no longer updated and seldom <<glossary-query,queried>>. The
data still needs to be searchable, but itâ€™s okay if those queries are slower.
See {ref}/ilm-index-lifecycle.html[Index lifecycle].
//Source: Elasticsearch

[[glossary-cold-tier]] cold tier::
<<glossary-data-tier,Data tier>> that contains <<glossary-node,nodes>> that hold
time series data that is accessed occasionally and not normally updated. See
{ref}/data-tiers.html[Data tiers].
//Source: Elasticsearch

[[glossary-component-template]] component template::
Building block for creating <<glossary-index-template,index templates>>. A
component template can specify <<glossary-mapping,mappings>>,
{ref}/index-modules.html[index settings], and <<glossary-alias,aliases>>. See
{ref}/index-templates.html[index templates].
//Source: Elasticsearch

[[glossary-condition]] condition::
Specifies the circumstances that must be met to trigger an alerting
<<glossary-rule,rule>>.
//Source: Kibana

[[glossary-conditional]] conditional::
A control flow that executes certain actions based on whether a statement
(also called a condition) is true or false. {ls} supports `if`,
`else if`, and `else` statements. You can use conditional statements to
apply filters and send events to a specific output based on conditions that
you specify.
//Source: Logstash

[[glossary-connector]] connector::
A configuration that enables integration with an external system (the
destination for an action). See
{kibana-ref}/action-types.html[Connectors and actions].
//Source: Kibana

[[glossary-console]] Console::
A tool for interacting with the {es} REST API. You can send requests to {es},
view responses, view API documentation, and get your request history. See
{kibana-ref}/console-kibana.html[Console].
//Source: Kibana

[[glossary-constructor]] constructor::
Directs <<glossary-allocator,allocators>> to manage containers of {es} and {kib}
nodes and maximizes the utilization of allocators. Monitors plan change requests
from the Cloud UI and determines how to transform the existing cluster. In a
highly available installation, places cluster nodes within different
availability zones to ensure that the cluster can survive the failure of an
entire availability zone.
//Source: Cloud

[[glossary-container]] container::
Includes an instance of {ece} software and its dependencies. Used to provision
similar environments, to assign a guaranteed share of host resources to nodes,
and to simplify operational effort in {ece}.
//Source: Cloud

[[glossary-content-tier]] content tier::
<<glossary-data-tier,Data tier>> that contains <<glossary-node,nodes>> that
handle the <<glossary-index,indexing>> and <<glossary-query,query>> load for
content, such as a product catalog. See {ref}/data-tiers.html[Data tiers].
//Source: Elasticsearch

[[glossary-coordinator]] coordinator::
Consists of a logical grouping of some {ece} services and acts as a distributed
coordination system and resource scheduler.
//Source: Cloud

[[glossary-ccr]] {ccr} (CCR)::
Replicates <<glossary-data-stream,data streams>> and <<glossary-index,indices>>
from <<glossary-remote-cluster,remote clusters>> in a
<<glossary-local-cluster,local cluster>>. See {ref}/xpack-ccr.html[{ccr-cap}].
//Source: Elasticsearch

[[glossary-ccs]] {ccs} (CCS)::
Searches <<glossary-data-stream,data streams>> and <<glossary-index,indices>> on
<<glossary-remote-cluster,remote clusters>> from a
<<glossary-local-cluster,local cluster>>. See
{ref}/modules-cross-cluster-search.html[Search across clusters].
//Source: Elasticsearch

[[glossary-custom-rules]] custom rules::
A set of conditions and actions that change the behavior of {anomaly-jobs}. You
can also use filters to further limit the scope of the rules. See
{ml-docs}/ml-rules.html[Custom rules]. {kib} refers to custom rules as job
rules.
//Source: Machine learning

[discrete]
[[d-glos]]
=== D

[[glossary-dashboard]] dashboard::
A collection of <<glossary-visualization,visualizations>>,
<<glossary-saved-search,saved searches>>, and <<glossary-map,maps>> that provide
insights into your data from multiple perspectives.
//Source: Kibana

[[glossary-ml-datafeed]] datafeed::
{anomaly-jobs-cap} can analyze either a one-off batch of data or continuously in
real time. {dfeeds-cap} retrieve data from {es} for analysis.
//Source: Machine learning

[[glossary-dataset]] dataset::
A collection of data that has the same structure.
The name of a dataset typically signifies its source.
See {fleet-guide}/data-streams.html[data stream naming scheme].
//Source: Observability

[[glossary-dataframe-job]] {dfanalytics-job}::
{dfanalytics-jobs-cap} contain the configuration information and metadata
necessary to perform {ml} analytics tasks on a source index and store the
outcome in a destination index. See
{ml-docs}/ml-dfa-overview.html[{dfanalytics-cap} overview] and the
{ref}/put-dfanalytics.html[create {dfanalytics-job} API].
//Source: Machine learning

[[glossary-data-source]] data source::
A file, database, or service that provides the underlying data for a map, Canvas
element, or visualization.
//Source: Kibana

[[glossary-data-stream]] data stream::
Named resource used to manage time series data. A data stream stores data across
multiple backing <<glossary-index,indices>>. See {ref}/data-streams.html[Data
streams].
//Source: Elasticsearch

[[glossary-data-tier]] data tier::
Collection of <<glossary-node,nodes>> with the same {ref}/modules-node.html[data
role] that typically share the same hardware profile. Data tiers include the
<<glossary-content-tier, content tier>>, <<glossary-hot-tier, hot tier>>,
<<glossary-warm-tier, warm tier>>, <<glossary-cold-tier, cold tier>>, and
<<glossary-frozen-tier,frozen tier>>. See {ref}/data-tiers.html[Data tiers].
//Source: Elasticsearch

[[glossary-delete-phase]] delete phase::
Last possible phase in the <<glossary-index-lifecycle,index lifecycle>>. In the
delete phase, an <<glossary-index,index>> is no longer needed and can safely be
deleted. See {ref}/ilm-index-lifecycle.html[Index lifecycle].
//Source: Elasticsearch

[[glossary-ml-detector]] detector::
As part of the configuration information that is associated with {anomaly-jobs},
detectors define the type of analysis that needs to be done. They also specify
which fields to analyze. You can have more than one detector in a job, which is
more efficient than running multiple jobs against the same data.
//Source: Machine learning

[[glossary-director]] director::
Manages the <<glossary-zookeeper,ZooKeeper>> datastore. This role is often
shared with the <<glossary-coordinator,coordinator>>, though in production
deployments it can be separated.
//Source: Cloud

[[glossary-discover]] Discover::
Enables you to search and filter your data to zoom in on the information
that you are interested in.
//Source: Kibana

[[glossary-distributed-tracing]] distributed tracing::
The end-to-end collection of performance data throughout your microservices architecture.
//Source: Observability

[[glossary-drilldown]] drilldown::
A navigation path that retains context (time range and filters) from the source
to the destination, so you can view the data from a new perspective. A dashboard
that shows the overall status of multiple data centers might have a drilldown to
a dashboard for a single data center. See {kibana-ref}/dashboard.html[Drilldowns].
//Source: Kibana

[[glossary-document]] document::
JSON object containing data stored in {es}. See
{ref}/documents-indices.html[Documents and indices].
//Source: Elasticsearch

[discrete]
[[e-glos]]
=== E

[[glossary-edge]] edge::
A connection between nodes in a graph that shows that they are related. The line
weight indicates the strength of the relationship.  See
{kibana-ref}/xpack-graph.html[Graph].
//Source: Kibana

[[glossary-elastic-agent]] {agent}::
A single, unified agent that you can deploy to hosts or containers to collect data and protect endpoints.
See {fleet-guide}/fleet-overview.html[{agent} overview].
//Source: Observability

[[glossary-ecs]] Elastic Common Schema (ECS)::
A document schema for Elasticsearch, for use cases such as logging and metrics.
ECS defines a common set of fields, their datatype, and gives guidance on their
correct usage. ECS is used to improve uniformity of event data coming from
different sources.

[[glossary-ems]] Elastic Maps Service (EMS)::
A service that provides basemap tiles, shape files, and other key features that
are essential for visualizing geospatial data.
//Source: Kibana

[[glossary-epr]] Elastic Package Registry (EPR)::
A service hosted by Elastic that stores Elastic package definitions in a central location.
See the https://github.com/elastic/package-registry[EPR GitHub repository].
//Source: Observability

[[glossary-element]] element::
A <<glossary-canvas,Canvas>> workpad object that displays an image, text, or
visualization.
//Source: Kibana

[[glossary-event]] event::
A single unit of information, containing a timestamp plus additional data. An
event arrives via an input, and is subsequently parsed, timestamped, and
passed through the {ls} <<glossary-pipeline,pipeline>>.
//Source: Logstash

[[glossary-eql]] Event Query Language (EQL)::
<<glossary-query,Query>> language for event-based time series data, such as
logs, metrics, and traces. EQL supports matching for event sequences. See
{ref}/eql.html[EQL].
//Source: Elasticsearch

[discrete]
[[f-glos]]
=== F

[[glossary-feature-controls]] Feature Controls::
Enables administrators to customize which features are available in each
<<glossary-space,space>>. See
{kibana-ref}//xpack-spaces.html#spaces-control-feature-visibility[Feature Controls].
//Source: Kibana

[[glossary-feature-influence]] feature influence::
In {oldetection}, feature influence scores indicate which features of a data
point contribute to its outlier behavior. See
{ml-docs}/ml-dfa-finding-outliers.html#dfa-feature-influence[Feature influence].
//Source: Machine learning

[[glossary-feature-importance]] feature importance::
In supervised {ml} methods such as {regression} and {classification}, feature
importance indicates the degree to which a specific feature affects a 
prediction.
See 
{ml-docs}/ml-dfa-regression.html#dfa-regression-feature-importance[{regression-cap} feature importance]
and
{ml-docs}/ml-dfa-classification.html#dfa-classification-feature-importance[{classification-cap} feature importance].
//Source: Machine learning

[[glossary-field]] field::
. Key-value pair in a <<glossary-document,document>>. See
{ref}/mapping.html[Mapping].
//Source: Elasticsearch
. In {ls}, this term refers to an <<glossary-event,event>> property. For
example, each event in an apache access log has properties, such as a status
code (200, 404), request path ("/", "index.html"), HTTP verb (GET, POST), client
IP address, and so on. {ls} uses the term "fields" to refer to these
properties.
//Source: Logstash

[[glossary-field-reference]] field reference::
A reference to an event <<glossary-field,field>>. This reference may appear in
an output block or filter block in the {ls} config file. Field references
are typically wrapped in square (`[]`) brackets, for example `[fieldname]`. If
you are referring to a top-level field, you can omit the `[]` and simply use
the field name. To refer to a nested field, you specify the full path to that
field: `[top-level field][nested field]`.
//Source: Logstash

[[glossary-filter]] filter::
<<glossary-query,Query>> that does not score matching documents. See
{ref}/query-filter-context.html[filter context].
//Source: Elasticsearch

[[glossary-filter-plugin]] filter plugin::
A {ls} <<glossary-plugin,plugin>> that performs intermediary processing on
an <<glossary-event,event>>. Typically, filters act upon event data after it
has been ingested via inputs, by mutating, enriching, and/or modifying the
data according to configuration rules. Filters are often applied conditionally
depending on the characteristics of the event. Popular filter plugins include
grok, mutate, drop, clone, and geoip. Filter stages are optional.
//Source: Logstash

[[glossary-fleet]] Fleet::
Fleet provides a way to centrally manage {agent}s at scale. There are two parts: The Fleet app in {kib} provides a web-based UI to add and remotely manage agents, while the {fleet-server} provides the backend service that manages agents.
See {fleet-guide}/fleet-overview.html[{agent} overview].
//Source: Observability

[[glossary-fleet-server]] {fleet-server}::
{fleet-server} is a component used to centrally manage {agent}s.
It serves as a control plane for updating agent policies, collecting status information, and coordinating actions across agents.
//Source: Observability

[[glossary-flush]] flush::
Writes data from the {ref}/index-modules-translog.html[transaction log] to disk
for permanent storage. See the {ref}/indices-flush.html[flush API].
//Source: Elasticsearch

[[glossary-follower-index]] follower index::
Target <<glossary-index,index>> for <<glossary-ccr,{ccr}>>. A follower index
exists in a <<glossary-local-cluster,local cluster>> and replicates a
<<glossary-leader-index,leader index>>. See {ref}/xpack-ccr.html[{ccr-cap}].
//Source: Elasticsearch

[[glossary-force-merge]] force merge::
Manually triggers a <<glossary-merge,merge>> to reduce the number of
<<glossary-segment,segments>> in an index's <<glossary-shard,shards>>. See the
{ref}/indices-forcemerge.html[force merge API].
//Source: Elasticsearch

[[glossary-frozen-phase]] frozen phase::
Fourth possible phase in the <<glossary-index-lifecycle,index lifecycle>>. In
the frozen phase, an <<glossary-index,index>> is no longer updated and
<<glossary-query,queried>> rarely. The information still needs to be searchable,
but itâ€™s okay if those queries are extremely slow. See
{ref}/ilm-index-lifecycle.html[Index lifecycle].
//Source: Elasticsearch

[[glossary-frozen-tier]] frozen tier::
<<glossary-data-tier,Data tier>> that contains <<glossary-node,nodes>> that
hold time series data that is accessed rarely and not normally updated. See
{ref}/data-tiers.html[Data tiers].
//Source: Elasticsearch

[discrete]
[[g-glos]]
=== G

[[glossary-gem]] gem::
A self-contained package of code that's hosted on
https://rubygems.org[RubyGems.org]. {ls} <<glossary-plugin,plugins>> are
packaged as Ruby Gems. You can use the {ls}
<<glossary-plugin-manager,plugin manager>> to manage {ls} gems.
//Source: Logstash

[[glossary-geojson]] GeoJSON::
A format for representing geospatial data. GeoJSON is also a file-type, commonly
used in the *Maps* application to upload a file of geospatial data. See
{kibana-ref}/indexing-geojson-data-tutorial.html[GeoJSON data].
//Source: Kibana

[[glossary-geo-point]] geo-point::
A field type in {es}. A geo-point field accepts latitude-longitude pairs for
storing point locations. The latitude-longitude format can be from a string,
geohash, array, well-known text, or object. See {ref}/geo-point.html[geo-point].
//Source: Kibana

[[glossary-geo-shape]] geo-shape::
A field type in {es}. A geo-shape field accepts arbitrary geographic primitives,
like polygons, lines, or rectangles (and more). You can populate a geo-shape
field from GeoJSON or well-known text. See {ref}/geo-shape.html[geo-shape].
//Source: Kibana

[[glossary-graph]] graph::
A data structure and visualization that shows interconnections between a set of
entities. Each entity is represented by a node. Connections between nodes are
represented by <<glossary-edge,edges>>. See {kibana-ref}/xpack-graph.html[Graph].
//Source: Kibana

[[glossary-grok-debugger]] Grok Debugger::
A tool for building and debugging grok patterns. Grok is good for parsing syslog,
Apache, and other webserver logs. See
{kibana-ref}/xpack-grokdebugger.html[Debugging grok expressions].
//Source: Kibana

[discrete]
[[h-glos]]
=== H

[[glossary-heat-map]] heat map::
A layer type in the *Maps* application. Heat maps cluster locations to show
higher (or lower) densities. Heat maps describe a visualization with color-coded
cells or regions to analyze patterns across multiple dimensions. See
{kibana-ref}/heatmap-layer.html[Heat map layer].
//Source: Kibana

[[glossary-hidden-index]] hidden data stream or index::
<<glossary-data-stream,Data stream>> or <<glossary-index,index>> excluded from
most <<glossary-index-pattern,index patterns>> by default. See
{ref}/multi-index.html#hidden[Hidden data streams and indices].
//Source: Elasticsearch

[[glossary-hot-phase]] hot phase::
First possible phase in the <<glossary-index-lifecycle,index lifecycle>>. In
the hot phase, an <<glossary-index,index>> is actively updated and queried. See
{ref}/ilm-index-lifecycle.html[Index lifecycle].
//Source: Elasticsearch

[[glossary-hot-thread]] hot thread::
A Java thread that has high CPU usage and executes for a longer than normal
period of time.
//Source: Logstash

[[glossary-hot-tier]] hot tier::
<<glossary-data-tier,Data tier>> that contains <<glossary-node,nodes>> that
handle the <<glossary-index,indexing>> load for time series data, such as logs or
metrics. This tier holds your most recent, most frequently accessed data. See
{ref}/data-tiers.html[Data tiers].
//Source: Elasticsearch

[discrete]
[[i-glos]]
=== I

[[glossary-id]] ID::
Identifier for a <<glossary-document,document>>. Document IDs must be unique
within an <<glossary-index,index>>. See the {ref}/mapping-id-field.html[`_id`
field].
//Source: Elasticsearch

[[glossary-index]] index::
. Collection of JSON <<glossary-document,documents>>. See
{ref}/documents-indices.html[Documents and indices].
//Source: Elasticsearch
. To add one or more JSON documents to {es}. This process is called indexing.
//Source: Elasticsearch

[[glossary-index-lifecycle]] index lifecycle::
Five phases an <<glossary-index,index>> can transition through:
<<glossary-hot-phase,hot>>, <<glossary-warm-phase,warm>>,
<<glossary-cold-phase,cold>>, <<glossary-frozen-phase,frozen>>,
and <<glossary-delete-phase,delete>>. See {ref}/ilm-policy-definition.html[Index
lifecycle].
//Source: Elasticsearch

[[glossary-index-lifecycle-policy]] index lifecycle policy::
Specifies how an <<glossary-index,index>> moves between phases in the
<<glossary-index-lifecycle,index lifecycle>> and what actions to perform during
each phase. See {ref}/ilm-policy-definition.html[Index lifecycle].
//Source: Elasticsearch

[[glossary-index-pattern]] index pattern::
String containing a wildcard (`*`) pattern that can match multiple
<<glossary-data-stream,data streams>>, <<glossary-index,indices>>, or
<<glossary-alias,aliases>>. See {ref}/multi-index.html[Multi-target syntax].
//Source: Elasticsearch

[[glossary-index-template]] index template::
Automatically configures the <<glossary-mapping,mappings>>,
{ref}/index-modules.html[index settings], and <<glossary-alias,aliases>>
of new <<glossary-index,indices>> that match its <<glossary-index-pattern,index
pattern>>. You can also use index templates to create
<<glossary-data-stream,data streams>>. See {ref}/index-templates.html[Index
templates].
//Source: Elasticsearch

[[glossary-indexer]] indexer::
A {ls} instance that is tasked with interfacing with an {es} cluster in
order to index <<glossary-event,event>> data.
//Source: Logstash

[[glossary-inference]] inference::
A {ml} feature that enables you to use supervised learning processes â€“ like
{regression} and {classification} â€“ in a continuous fashion by using
<<glossary-trained-model,trained models>> against incoming data.
//Source: Machine learning

[[glossary-inference-aggregation]] inference aggregation::
A pipeline aggregation that references a <<glossary-trained-model>> in an
aggregation to infer on the results field of the parent bucket aggregation. It
enables you to use supervised {ml} at search time.
//Source: Machine learning

[[glossary-inference-processor]] inference processor::
A processor specified in an ingest pipeline that uses a
<<glossary-trained-model>> to infer against the data that is being ingested in
the pipeline.
//Source: Machine learning

[[glossary-influencer]] influencer::
Influencers are entities that might have contributed to an anomaly in a specific
bucket in an {anomaly-job}. For more information, see
{ml-docs}/ml-influencers.html[Influencers].
//Source: Machine learning

[[glossary-ingestion]] ingestion::
The process of collecting and sending data from various data sources to {es}.
//Source: Observability

[[glossary-input-plugin]] input plugin::
A {ls} <<glossary-plugin,plugin>> that reads <<glossary-event,event>> data
from a specific source. Input plugins are the first stage in the {ls}
event processing <<glossary-pipeline,pipeline>>. Popular input plugins include
file, syslog, redis, and beats.
//Source: Logstash

[[glossary-instrumentation]] instrumentation::
Extending application code to track where your application is spending time.
Code is considered instrumented when it collects and reports this performance data to APM.
//Source: Observability

[[glossary-integration]] integration::

An easy way for external systems to connect to the {stack}.
Whether it's collecting data or protecting systems from security threats,
integrations provide out-of-the-box assets to make setup easy--many with just a single click.
//Source: Observability

[[glossary-integration-policy]] integration policy::
An instance of an <<glossary-integration,integration>> that is configured for a specific use case,
such as collecting logs from a specific file.
//Source: Observability

[discrete]
[[j-glos]]
=== J

[[glossary-ml-job]][[glossary-job]] job::
{ml-cap} jobs contain the configuration information and metadata
necessary to perform an analytics task. There are two types:
<<glossary-anomaly-detection-job,{anomaly-jobs}>> and
<<glossary-dataframe-job,{dfanalytics-jobs}>>. See also <<glossary-rollup-job>>.
//Source: Machine learning

[discrete]
[[k-glos]]
=== K

[[glossary-kibana-privileges]] {kib} privileges::
Enable administrators to grant users read-only, read-write, or no access to
individual features within <<glossary-space,spaces>> in {kib}. See
{kibana-ref}/kibana-privileges.html[{kib} privileges].
//Source: Kibana

[[glossary-kql]] {kib} Query Language (KQL)::
The default language for querying in {kib}. KQL provides support for scripted
fields. See {kibana-ref}/kuery-query.html[Kibana Query Language].
//Source: Kibana

[discrete]
[[l-glos]]
=== L

[[glossary-labs]] labs::
An in-progress or experimental feature in *Canvas* or *Dashboard* that you can
try out and provide feedback. When enabled, youâ€™ll see *Labs* in the toolbar.
//Source: Kibana

[[glossary-leader-index]] leader index::
Source <<glossary-index,index>> for <<glossary-ccr,{ccr}>>. A leader index
exists on a <<glossary-remote-cluster,remote cluster>> and is replicated to
<<glossary-follower-index,follower indices>>. See
{ref}/xpack-ccr.html[{ccr-cap}].
//Source: Elasticsearch

[[glossary-lens]] Lens::
Enables you to build visualizations by dragging and dropping data fields. Lens
makes makes smart visualization suggestions for your data, allowing you to
switch between visualization types. See {kibana-ref}/dashboard.html[Lens].
//Source: Kibana

[[glossary-local-cluster]] local cluster::
<<glossary-cluster,Cluster>> that pulls data from a
<<glossary-remote-cluster,remote cluster>> in <<glossary-ccs,{ccs}>> or
<<glossary-ccr,{ccr}>>. See {ref}/modules-remote-clusters.html[Remote clusters].
//Source: Elasticsearch

[[glossary-lucene]] Lucene query syntax::
The query syntax for {kib}â€™s legacy query language. The Lucene query syntax is
available under the options menu in the query bar and from
<<glossary-advanced-settings,Advanced Settings>>.
//Source: Kibana

[discrete]
[[m-glos]]
=== M

[[glossary-ml-nodes]] machine learning node::
A {ml} node is a node that has `xpack.ml.enabled` set to `true` and `ml` in `node.roles`.
If you want to use {ml-features}, there must be at least one {ml} node in your
cluster. See {ref}/modules-node.html#ml-node[Machine learning nodes].
//Source: Machine learning

[[glossary-map]] map::
A representation of geographic data using symbols and labels. See
{kibana-ref}/maps.html[Maps].
//Source: Kibana

[[glossary-mapping]] mapping::
Defines how a <<glossary-document,document>>, its <<glossary-field,fields>>, and
its metadata are stored in {es}. Similar to a schema definition. See
{ref}/mapping.html[Mapping].
//Source: Elasticsearch

[[glossary-master-node]] master node::
Handles write requests for the cluster and publishes changes to other nodes in
an ordered fashion. Each cluster has a single master node which is chosen
automatically by the cluster and is replaced if the current master node fails.
Also see <<glossary-node,node>>.
//Source: Cloud

[[glossary-merge]] merge::
Process of combining a <<glossary-shard,shard>>'s smaller Lucene
<<glossary-segment,segments>> into a larger one. {es} manages merges
automatically.
//Source: Elasticsearch

[[glossary-message-broker]] message broker::
Also referred to as a _message buffer_ or _message queue_, a message broker is
external software (such as Redis, Kafka, or RabbitMQ) that stores messages
from the {ls} shipper instance as an intermediate store, waiting to be
processed by the {ls} indexer instance.
//Source: Logstash

[[glossary-metric-aggregation]] metric aggregation::
An aggregation that calculates and tracks metrics for a set of documents.
//Source: Kibana

[[glossary-metadata]] @metadata::
A special field for storing content that you don't want to include in output
<<glossary-event,events>>. For example, the `@metadata` field is useful for
creating transient fields for use in <<glossary-conditional,conditional>>
statements.
//Source: Logstash

[[glossary-module]] module::
Out-of-the-box configurations for common data sources to simplify the collection,
parsing, and visualization of logs and metrics.
//Source: Observability

[[glossary-monitor]] monitor::
A network endpoint which is monitored to track the performance and availability of
applications and services.
//Source: Observability

[[glossary-multi-field]] multi-field::
A <<glossary-field,field>> that's <<glossary-mapping,mapped>> in multiple ways.
See the {ref}/multi-fields.html[`fields` mapping parameter].
//Source: Elasticsearch

[discrete]
[[n-glos]]
=== N

[[glossary-namespace]] namespace::
A user-configurable arbitrary data grouping, such as an environment (`dev`, `prod`, or `qa`),
a team, or a strategic business unit.
//Source: Observability

[[glossary-node]] node::
A single {es} server. One or more nodes can form a <<glossary-cluster,cluster>>.
See {ref}/scalability.html[Clusters, nodes, and shards].
//Source: Elasticsearch

[discrete]
[[o-glos]]
=== O

[[glossary-observability]] Observability::
Unifying your logs, metrics, uptime data, and application traces to
provide granular insights and context into the behavior of services
running in your environments.
//Source: Observability

[[glossary-output-plugin]] output plugin::
A {ls} <<glossary-plugin,plugin>> that writes <<glossary-event,event>> data
to a specific destination. Outputs are the final stage in the event
<<glossary-pipeline,pipeline>>. Popular output plugins include elasticsearch,
file, graphite, and statsd.
//Source: Logstash

[discrete]
[[p-glos]]
=== P

[[glossary-painless-lab]] Painless Lab::
An interactive code editor that lets you test and debug Painless scripts in
real-time. See {kibana-ref}/painlesslab.html[Painless Lab].
//Source: Kibana

[[glossary-panel]] panel::
A <<glossary-dashboard,dashboard>> component that contains a query element or
visualization, such as a chart, table, or list.
//Source: Kibana

[[glossary-pipeline]] pipeline::
A term used to describe the flow of <<glossary-event,events>> through the
{ls} workflow. A pipeline typically consists of a series of input, filter,
and output stages. <<glossary-input-plugin,Input>> stages get data from a source
and generate events, <<glossary-filter-plugin,filter>> stages, which are
optional, modify the event data, and <<glossary-output-plugin,output>> stages
write the data to a destination. Inputs and outputs support
<<glossary-codec-plugin,codecs>> that enable you to encode or decode the data as
it enters or exits the pipeline without having to use a separate filter.
//Source: Logstash

[[glossary-plan]] plan::
Specifies the configuration and topology of an {es} or {kib} cluster, such as
capacity, availability, and {es} version, for example. When changing a plan, the
<<glossary-constructor,constructor>> determines how to transform the existing
cluster into the pending plan.
//Source: Cloud

[[glossary-plugin]] plugin::
A self-contained software package that implements one of the stages in the
{ls} event processing <<glossary-pipeline,pipeline>>. The list of available
plugins includes <<glossary-input-plugin,input plugins>>,
<<glossary-output-plugin,output plugins>>,
<<glossary-codec-plugin,codec plugins>>, and
<<glossary-filter-plugin,filter plugins>>. The plugins are implemented as Ruby
<<glossary-gem,gems>> and hosted on https://rubygems.org[RubyGems.org]. You
define the stages of an event processing <<glossary-pipeline,pipeline>>
by configuring plugins.
//Source: Logstash

[[glossary-plugin-manager]] plugin manager::
Accessed via the `bin/logstash-plugin` script, the plugin manager enables
you to manage the lifecycle of <<glossary-plugin,plugins>> in your {ls}
deployment. You can install, remove, and upgrade plugins by using the
plugin manager Command Line Interface (CLI).
//Source: Logstash

[[glossary-primary-shard]] primary shard::
Lucene instance containing some or all data for an <<glossary-index,index>>.
When you index a <<glossary-document,document>>, {es} adds the document to
primary shards before <<glossary-replica-shard,replica shards>>. See
{ref}/scalability.html[Clusters, nodes, and shards].
//Source: Elasticsearch

[[glossary-proxy]] proxy::
A highly available, TLS-enabled proxy layer that routes user requests, mapping
cluster IDs that are passed in request URLs for the container to the cluster
nodes handling the user requests.
//Source: Cloud

[discrete]
[[q-glos]]
=== Q

[[glossary-query]] query::
Request for information about your data. You can think of a query as a
question, written in a way {es} understands. See
{ref}/search-your-data.html[Search your data].
//Source: Elasticsearch

[[glossary-query-profiler]] Query Profiler::
A tool that enables you to inspect and analyze search queries to diagnose and
debug poorly performing queries. See
{kibana-ref}/xpack-profiler.html[Query Profiler].
//Source: Kibana

[discrete]
[[r-glos]]
=== R

[[glossary-real-user-monitoring]] Real user monitoring (RUM)::
Performance monitoring, metrics, and error tracking of web applications.
//Source: Observability

[[glossary-recovery]] recovery::
Process of syncing a <<glossary-replica-shard,replica shard>> from a
<<glossary-primary-shard,primary shard>>. Upon completion, the replica shard is
available for searches. See the {ref}/indices-recovery.html[index recovery API].
//Source: Elasticsearch

[[glossary-reindex]] reindex::
Copies documents from a source to a destination. The source and destination can
be a <<glossary-data-stream,data stream>>, <<glossary-index,index>>, or
<<glossary-alias,alias>>. See the {ref}/docs-reindex.html[Reindex API].
//Source: Elasticsearch

[[glossary-remote-cluster]] remote cluster::
A separate <<glossary-cluster,cluster>>, often in a different data center or
locale, that contains <<glossary-index,indices>> that can be replicated or
searched by the <<glossary-local-cluster,local cluster>>. The connection to a
remote cluster is unidirectional. See {ref}/modules-remote-clusters.html[Remote
clusters].
//Source: Elasticsearch

[[glossary-replica-shard]] replica shard::
Copy of a <<glossary-primary-shard,primary shard>>. Replica shards can improve
search performance and resiliency by distributing data across multiple
<<glossary-node,nodes>>. See {ref}/scalability.html[Clusters, nodes, and
shards].
//Source: Elasticsearch

[[glossary-roles-token]] roles token::
Enables a host to join an existing {ece} installation and grants permission to
hosts to hold certain roles, such as the <<glossary-allocator,allocator>> role.
Used when installing {ece} on additional hosts, a roles token helps secure {ece}
by making sure that only authorized hosts become part of the installation.
//Source: Cloud

[[glossary-rollover]] rollover::
Creates a new write index when the current one reaches a certain size, number of
docs, or age. A rollover can target a <<glossary-data-stream,data stream>> or an
<<glossary-alias,alias>> with a write index.
//Source: Elasticsearch

[[glossary-rollup]] rollup::
Summarizes high-granularity data into a more compressed format to maintain access
to historical data in a cost-effective way. See
{ref}/xpack-rollup.html[Roll up your data].
//Source: Elasticsearch

[[glossary-rollup-index]] rollup index::
Special type of <<glossary-index,index>> for storing historical data at reduced
granularity. Documents are summarized and indexed into a rollup index by a
<<glossary-rollup-job,rollup job>>. See {ref}/xpack-rollup.html[Rolling up
historical data].
//Source: Elasticsearch

[[glossary-rollup-job]] {rollup-job}::
Background task that runs continuously to summarize documents in an
<<glossary-index,index>> and index the summaries into a separate rollup index.
The job configuration controls what data is rolled up and how often. See
{ref}/xpack-rollup.html[Rolling up historical data].
//Source: Elasticsearch

[[glossary-routing]] routing::
Process of sending and retrieving data from a specific
<<glossary-primary-shard,primary shard>>. {es} uses a hashed routing value to
choose this shard. You can provide a routing value in
<<glossary-index,indexing>> and search requests to take advantage of caching.
See the {ref}/mapping-routing-field.html[`_routing` field].
//Source: Elasticsearch

[[glossary-rule]] rule::
A set of <<glossary-condition,conditions>>, schedules, and
<<glossary-action,actions>> that enable notifications. See
<<glossary-rules-and-connectors,{rules-ui}>>.
//Source: Kibana

[[glossary-rules-and-connectors]] Rules and Connectors::
A comprehensive view of all your alerting rules. Enables you to access and
manage rules for all {kib} apps from one place. See
{kibana-ref}/alerting-getting-started.html[{rules-ui}].
//Source: Kibana

[[glossary-runner]] runner::
A local control agent that runs on all hosts, used to deploy local containers
based on role definitions. Ensures that containers assigned to it exist and are
able to run, and creates or recreates the containers if necessary.
//Source: Cloud

[[glossary-runtime-fields]] runtime field::
<<glossary-field,Field>> that is evaluated at query time. You access runtime
fields from the search API like any other field, and {es} sees runtime fields no
differently. See {ref}/runtime.html[Runtime fields].
//Source: Elasticsearch

[discrete]
[[s-glos]]
=== S

[[glossary-saved-object]] saved object::
A representation of a dashboard, visualization, map, index pattern, or Canvas
workpad that can be stored and reloaded.
//Source: Kibana

[[glossary-saved-search]] saved search::
The query text, filters, and time filter that make up a search, saved for later
retrieval and reuse.
//Source: Kibana

[[glossary-scripted-field]] scripted field::
A field that computes data on the fly from the data in {es} indices. Scripted
field data is shown in Discover and used in visualizations.
//Source: Kibana

[[glossary-search-session]] search session::
A group of one or more queries that are executed asynchronously. The results of
the session are stored for a period of time, so you can recall the query. Search
sessions are user specific.
//Source: Kibana

[[glossary-search-template]] search template::
A stored search you can run with different variables. See
{ref}/search-template.html[Search templates].
//Source: Elasticsearch

[[glossary-searchable-snapshot]] searchable snapshot::
<<glossary-snapshot,Snapshot>> of an <<glossary-index,index>> mounted as a
<<glossary-searchable-snapshot-index,searchable snapshot index>>. You can search
this index like a regular index. See {ref}/searchable-snapshots.html[searchable
snapshots].
//Source: Elasticsearch

[[glossary-searchable-snapshot-index]] searchable snapshot index::
<<glossary-index,Index>> whose data is stored in a
<<glossary-snapshot,snapshot>>. Searchable snapshot indices do not need
<<glossary-replica-shard,replica shards>> for resilience, since their data is
reliably stored outside the cluster. See
{ref}/searchable-snapshots.html[searchable snapshots].
//Source: Elasticsearch

[[glossary-segment]] segment::
Data file in a <<glossary-shard,shard>>'s Lucene instance. {es} manages Lucene
segments automatically.
//Source: Elasticsearch

[[glossary-services-forwarder]] services forwarder::
Routes data internally in an {ece} installation.
//Source: Cloud

[[glossary-shard]] shard::
Lucene instance containing some or all data for an <<glossary-index,index>>.
{es} automatically creates and manages these Lucene instances. There are two
types of shards: <<glossary-primary-shard,primary>> and
<<glossary-replica-shard,replica>>. See {ref}/scalability.html[Clusters, nodes,
and shards].
//Source: Elasticsearch

[[glossary-shareable]] shareable::
A Canvas workpad that can be embedded on any webpage. Shareables enable you to
display Canvas visualizations on internal wiki pages or public websites.
//Source: Kibana

[[glossary-shipper]] shipper::
An instance of {ls} that send events to another instance of {ls}, or
some other application.
//Source: Logstash

[[glossary-shrink]] shrink::
Reduces the number of <<glossary-primary-shard,primary shards>> in an index. See
the {ref}/indices-shrink-index.html[shrink index API].
//Source: Elasticsearch

[[glossary-snapshot]] snapshot::
Backup taken of a running <<glossary-cluster,cluster>>. You can take snapshots
of the entire cluster or only specific <<glossary-data-stream,data streams>> and
<<glossary-index,indices>>. See {ref}/snapshot-restore.html[Snapshot and
restore].
//Source: Elasticsearch

[[glossary-snapshot-lifecycle-policy]] snapshot lifecycle policy::
Specifies how frequently to perform automatic backups of a cluster and how long
to retain the resulting <<glossary-snapshot,snapshots>>. See
{ref}/snapshot-lifecycle-management.html[Manage the snapshot lifecycle].
//Source: Elasticsearch

[[glossary-snapshot-repository]] snapshot repository::
Location where <<glossary-snapshot,snapshots>> are stored. A snapshot repository
can be a shared filesystem or a remote repository, such as Azure or Google Cloud
Storage. See {ref}/snapshot-restore.html[Snapshot and restore].
//Source: Elasticsearch

[[glossary-source_field]] source field::
Original JSON object provided during <<glossary-index,indexing>>. See the
{ref}/mapping-source-field.html[`_source` field].
//Source: Elasticsearch

[[glossary-space]] space::
A place for organizing <<glossary-dashboard,dashboards>>,
<<glossary-visualization,visualizations>>, and other
<<glossary-saved-object,saved objects>> by category. For example, you might have
different spaces for each team, use case, or individual. See
{kibana-ref}/xpack-spaces.html[Spaces].
//Source: Kibana

[[glossary-span]] span::
Information about the execution of a specific code path.
{apm-overview-ref-v}/transaction-spans.html[Spans] measure from the start to the end of an activity
and can have a parent/child relationship with other spans.
//Source: Observability

[[glossary-split]] split::
Adds more <<glossary-primary-shard,primary shards>> to an
<<glossary-index,index>>. See the {ref}/indices-split-index.html[split index
API].
//Source: Elasticsearch

[[glossary-stack-alerts]] stack alerts::
The general purpose alert types {kib} provides out of the box. Index threshold
and geo alerts are currently the two stack alert types.
//Source: Kibana

[[glossary-standalone]] standalone::
This mode allows manual configuration and management of {agent}s locally
on the systems where they are installed.
See {fleet-guide}/run-elastic-agent-standalone.html[Run {agent} standalone].
//Source: Observability

[[glossary-stunnel]] stunnel::
Securely tunnels all traffic in an {ece} installation.
//Source: Cloud

[[glossary-system-index]] system index::
<<glossary-index,Index>> containing configurations and other data used
internally by the {stack}. System index names start with a dot (`.`), such as
`.security`. Do not directly access or change system indices.
//Source: Elasticsearch

[discrete]
[[t-glos]]
=== T

[[glossary-tag]] tag::
A keyword or label that you assign to {kib} saved objects, such as dashboards
and visualizations, so you can classify them in a way that is meaningful to you.
Tags makes it easier for you to manage your content. See
{kibana-ref}/managing-tags.html[Tags].
//Source: Kibana

[[glossary-term]] term::
See <<glossary-token,token>>.
//Source: Elasticsearch

[[glossary-term-join]] term join::
A shared key that combines vector features with the results of an {es} terms
aggregation. Term joins augment vector features with properties for data-driven
styling and rich tooltip content in maps.
//Source: Kibana

[[glossary-text]] text::
Unstructured content, such as a product description or log message. You
typically <<glossary-analysis,analyze>> text for better search. See
{ref}/analysis.html[Text analysis].
//Source: Elasticsearch

[[glossary-time-filter]] time filter::
A {kib} control that constrains the search results to a particular time period.
//Source: Kibana

[[glossary-timelion]] Timelion::
A tool for building a time series visualization that analyzes data in time order.
See {kibana-ref}/dashboard.html[Timelion].
//Source: Kibana

[[glossary-time-series-data]] time series data::
Timestamped data such as logs, metrics, and events that is indexed on an ongoing
basis.
//Source: Kibana

[[glossary-token]] token::
A chunk of unstructured <<glossary-text,text>> that's been optimized for search.
In most cases, tokens are individual words. Tokens are also called terms. See
{ref}/analysis.html[Text analysis].
//Source: Elasticsearch

[[glossary-tokenization]] tokenization::
Process of breaking unstructured text down into smaller, searchable chunks
called <<glossary-token,tokens>>. See
{ref}/analysis-overview.html#tokenization[Tokenization].
//Source: Elasticsearch

[[glossary-trace]] trace::
Defines the amount of time an application spends on a request.
Traces are made up of a collection of transactions and spans that have a common root.
//Source: Observability

[[glossary-tracks]] tracks::
A layer type in the *Maps* application. This layer converts a series of point
locations into a line, often representing a path or route.
//Source: Kibana

[[glossary-trained-model]] trained model::
A {ml} model that is trained and tested against a labelled data set and can be
referenced in an ingest pipeline or in a pipeline aggregation to perform
{classification} or {reganalysis} on new data. See
{ml-docs}/ml-trained-models.html[Trained models].
//Source: Machine learning

[[glossary-transaction]] transaction::
A special kind of <<glossary-span,span>> that has additional attributes associated with it.
{apm-overview-ref-v}/transactions.html[Transactions] describe an event captured by an
Elastic <<glossary-apm-agent,APM agent>> instrumenting a service.
//Source: Observability

[[glossary-tsvb]] TSVB::
A time series data visualizer that allows you to combine an infinite number of
aggregations to display complex data. See {kibana-ref}/dashboard.html[TSVB].
//Source: Kibana

[discrete]
[[u-glos]]
=== U

[[glossary-upgrade-assistant]] Upgrade Assistant::
A tool that helps you prepare for an upgrade to the next major version of {es}.
The assistant identifies the deprecated settings in your cluster and indices and
guides you through resolving issues, including reindexing. See
{kibana-ref}/upgrade-assistant.html[Upgrade Assistant].
//Source: Kibana

[[glossary-uptime]] Uptime::
A metric of system reliability used to monitor the status of network endpoints
via HTTP/S, TCP, and ICMP.
//Source: Observability

[discrete]
[[v-glos]]
=== V

[[glossary-vector]] vector data::
Points, lines, and polygons used to represent a map.
//Source: Kibana

[[glossary-vega]] Vega::
A declarative language used to create interactive visualizations. See
{kibana-ref}/dashboard.html[Vega].
//Source: Kibana

[[glossary-visualization]] visualization::
A graphical representation of query results in {kib} (e.g., a histogram, line
graph, pie chart, or heat map).
//Source: Kibana

[discrete]
[[w-glos]]
=== W

[[glossary-warm-phase]] warm phase::
Second possible phase in the <<glossary-index-lifecycle,index lifecycle>>. In
the warm phase, an <<glossary-index,index>> is generally optimized for search
and no longer updated. See {ref}/ilm-policy-definition.html[Index lifecycle].
//Source: Elasticsearch

[[glossary-warm-tier]] warm tier::
<<glossary-data-tier,Data tier>> that contains <<glossary-node,nodes>> that hold
time series data that is accessed less frequently and rarely needs to be
updated. See {ref}/data-tiers.html[Data tiers].
//Source: Elasticsearch

[[glossary-watcher]] Watcher::
The original suite of alerting features. See
{kibana-ref}/watcher-ui.html[Watcher].
//Source: Kibana

[[glossary-wms]] Web Map Service (WMS)::
A layer type in the *Maps* application. Add a WMS source to provide
authoritative geographic context to your map. See the
https://www.ogc.org/standards/wms[OpenGIS Web Map Service].
//Source: Kibana

[[glossary-worker]] worker::
The filter thread model used by {ls}, where each worker receives an
<<glossary-event,event>> and applies all filters, in order, before emitting
the event to the output queue. This allows scalability across CPUs because
many filters are CPU intensive.
//Source: Logstash

[[glossary-workpad]] workpad::
A workspace where you build presentations of your live data in
<<glossary-canvas,Canvas>>. See {kibana-ref}/canvas.html[Create a workpad].
//Source: Kibana

[discrete]
[[z-glos]]
=== Z

[[glossary-zookeeper]] ZooKeeper::
A coordination service for distributed systems used by {ece} to store the state
of the installation. Responsible for discovery of hosts, resource allocation,
leader election after failure and high priority notifications.
//Source: Cloud
