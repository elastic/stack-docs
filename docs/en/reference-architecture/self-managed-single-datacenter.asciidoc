[[self-managed-single-datacenter]]
== Self-managed hot-frozen multi-region architecture for time series data
++++
<titleabbrev>Architecture: Self-managed - multi-region</titleabbrev>
++++

This architecture is designed to ensure high availability during normal operations and node maintenance. It reduces cost by leveraging the frozen tier as soon as it makes sense from an ingest and most frequently read documents perspective. It significantly reduces the likelihood of hot-spotting due to the sharding strategy. Additionally it eliminates network and disk overhead caused by rebalancing attempts that would occur during maintenance due to setting forced awareness. For more information on elements of this architecture, see https://www.elastic.co/guide/en/elasticsearch/reference/current/high-availability-cluster-design-large-clusters.html#high-availability-cluster-design-two-zones[Resilience in larger clusters - Two-zone clusters]. 

This architecure provides the following benefits:

* Reduces cost by leveraging the Frozen tier as soon as that makes sense from an ingest and most frequently read documents perspective.
* Significantly reduces the likelihood of hot-spotting due to the sharding strategy.
* Eliminates network and disk overhead caused by rebalancing attempts that would occur during maintenance due to setting forced awareness.

TIP: This architecture includes all the essential components of the Elastic Stack. It's designed to ensure your deployment has a stable foundation, based on expert recommendations, but is not intended for sizing workloads.

The most important foundational step to any architecture is designing your deployment to be responsive to production workloads. For more information on planning for production, see https://www.elastic.co/guide/en/elasticsearch/reference/current/scalability.html[Get ready for production].

[discrete]
[[single-datacenter-use-case]]
=== Use case

This architecture is intended for organizations that need to do the following:

* Store data that is written once and not updated including logs, metrics, or accounting ledgers where balance updates are done via additional offsetting entries.
* Be resilient to hardware failures.
* Ensure availability during operational maintenance of any given pod.

[discrete]
[[single-datacenter-architecture]]
=== Architecture

image::images/single-datacenter.png["A self hosted single datacenter deployment"]

[discrete]
[[single-datacenter-configuration]]
=== Example configuration

The following is a sample configuration with the following specifications:

* An ingest rate of 1TB/day
* 1 day in the hot tier
* 89 days in the frozen tier
* A total of 90 days of searchable data

* Hot tier: 120G RAM (2 60G RAM node x 2 pods)
* Frozen tier: 120G RAM (1 60G RAM node x 2 pods)
* Machine learning: 128G RAM (1 64G node x 2 pods)
* Master nodes: 24G RAM (8G node x 3 pods) - The master node in pod 3 is for voting only
* Kibana: 16G RAM (16G node x 2 availability zone)

[discrete]
[[single-datacenter-considerations]]
=== Important considerations

The following are important considerations for this architecture:

* You may require more than one copy of the most recently written data to be available. To achieve this, add data nodes to pod 3 and set the https://www.elastic.co/guide/en/elasticsearch/reference/current/size-your-shards.html#create-a-sharding-strategy[sharding strategy] to 1 primary and 2 replicas.
* Machine learning nodes in this architecture are optional. If you choose to use machine learning nodes, deploy one per pod.

* Maintenance should be performed one pod at a time.

* A yellow cluster state is acceptable during maintenance. This is due to the replica shards being unassigned.

[discrete]
[[single-datacenter-limitations]]
=== Limitations of this architecture
* This design does not address cross region disaster recovery. To learn more, see https://www.elastic.co/guide/en/elasticsearch/reference/current/xpack-ccr.html[Cross-cluster replication]
* During maintenance windows, only a single copy of the latest data not yet captured in a snapshot is available.
* This design assumes the data is written once and not updated.

[discrete]
[[single-datacenter-resources]]

=== Resources and references