[[ml-nlp-elser]]
= ELSER â€“ Elastic Learned Sparse Encoder
++++
<titleabbrev>ELSER</titleabbrev>
++++

:keywords: {ml-init}, {stack}, {nlp}, ELSER
:description: ELSER is a learned sparse ranking model trained by Elastic.

experimental[]

Elastic Learned Sparse Encoder - or ELSER - is a text expansion model that uses 
sparse vector representation and trained by Elastic . As a retrieval model, 
ELSER performs text-expansion for more relevant search results with expanding a 
search query to include terms that are not present in the query itself, but 
semantically highly relevant.

You can use ELSER for various NLP tasks, such as 
{ref}/semantic-search-elser.html[semantic search]. ELSER is an out-of-domain 
model which doesn't need to be fine-tuned on your data - it provides relevant 
search results out of the box.

// TO DO: Refer to this blog post, to learn more about ELSER.


[discrete]
[[elser-req]]
== Requirements

To use ELSER, you must have the {subscriptions}[appropriate subscription] level 
or the trial period activated.


[discrete]
[[download-elser]]
== Download ELSER

You can download ELSER either from the Trained Models page in {kib} or by using 
the Dev Console.

[discrete]
[[trained-model]]
=== Using the Trained Models page

1. In {kib}, navigate to **{ml-app}** > **Trained Models**. ELSER can be found 
in the list of Trained Models.
2. Click the Download model button under **Actions**. You can check the download 
status on the **Notifications** page.
+
--
[role="screenshot"]
image::images/ml-nlp-elser-download.png[alt="Downloading ELSER",align="center"]
--

Your ELSER deployment is ready to be used in 

[discrete]
[[dev-console]]
=== Using the Dev Console

1. In {kib}, navigate to the **Dev Console**.
2. Create the ELSER model configuration by running the following API call:

[source,console]
----------------------------------
PUT _ml/trained_models/.elser_model_1
{
  "input": {
	"field_names": ["text_field"]
  }
}
----------------------------------

The API call automatically initiates the model download if the model is not 
downloaded yet.


[discrete]
[[deploy-elser]]
== Deploy ELSER

After you downloaded ELSER, you can use {kib} to view and manage its deployment 
across your cluster under **{ml-app}** > **Trained Models**.

1. Start the deployment by clicking the Start deployment button.
2. Provide a deployment ID, select priority, and set the number of allocations 
and threads per allocation values.
+
--
[role="screenshot"]
image::images/ml-nlp-elser-deployment.png[alt="Deploying ELSER",align="center"]
--
3. Click Start.

Alternatively, you can deploy the model by using the 
{ref}/start-trained-model-deployment.html[start trained model deployment API] 
with a delpoyment ID:

[source,console]
----------------------------------
POST _ml/trained_models/.elser_model_1/deployment/_start?deployment_id=for_search
----------------------------------

You can deploy the model multiple times with different deployment IDs.

After the deployment is complete, ELSER is ready to use either in an ingest 
pipeline or in a `text_expansion` query to perform semantic search.


[discrete]
[[further-readings]]
== Further readings

* {ref}/semantic-search-elser.html[Perform semantic search with ELSER]
// TO DO * [Blog post about ELSER]
