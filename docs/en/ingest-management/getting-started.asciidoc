[[ingest-management-getting-started]]
[role="xpack"]
= Getting started

//TODO: Technical edit.

//TODO: Add a summary.

experimental[]

To use {ingest-management}, you need an {es} cluster and {kib} (version 7.8 for the experimental release)
with a basic license. See {stack-gs}/get-started-elastic-stack.html[Getting started with the {stack}].

//TODO: Add cloud info

IMPORTANT: Since this is an experimental release, it should only be used in a dedicated test environment
that can be deleted when you are done. Please do not enable or use {ingest-management} in a production
environment.

[float]
[[ingest-manager-prereqs]]
== Prerequisites

If you want to use {ingest-management}, the following prerequisites have to be met in the {es} configuration:

- {es} security has to be enabled by setting `xpack.security.enabled` to `true`.
- API keys have to be enabled in {es} by setting `xpack.security.authc.api_key.enabled` to `true`.

If you use our https://www.elastic.co/cloud/elasticsearch-service[hosted {ess}] on
{ecloud}, these settings will already be enabled.

In this experimental release, {ingest-management} is only available to users with the superuser role. See
{ref}/built-in-roles.html[Built-in roles].

For feedback and questions, please contact us https://ela.st/ingest-manager-feedback[here]. 

[float]
[[enable-ingest-management]]
== Step 1: Enable {ingest-management}

To enable {ingest-management}, make the following changes to the {kib} configuration:

- set `xpack.ingestManagement.enabled` to `true`

If you are using our https://www.elastic.co/cloud/elasticsearch-service[hosted {ess}] on
{ecloud}, you will need to add them to the {kib} user settings as described in 
{cloud}/ec-manage-kibana-settings.html[Add {kib} user settings].

If you are using an **on-premises** stack deployment, you will need to add them to the {kib} configuration
 as described in {kibana-ref}/ingest-manager-settings-kb.html[{ingest-manager} settings].

To verify that {ingest-management} has been correctly enabled, login to {kib}, and select 
**Management > {ingest-manager}**. If the menu entry is visible, and you see the following start page
for {ingest-manager}, enabling {ingest-management} has been successful.

[role="screenshot"]
image::images/kibana-ingest-manager-start.png[{ingest-manager} app in {kib}]

[float]
[[install-integration]]
== Step 2: Install an integration and create a data source

{ingest-management} bundles various assets that are needed to ingest and visualize data in **integrations**.

In this Guide we assume that you have `nginx` running on some of your infrastructure, and want to
collect logs and metrics from it. To do so, first install the `nginx` integration provided by Elastic.

In the {ingest-manager} app, navigate to **Integrations** and use the search bar to find the Nginx integration.

[role="screenshot"]
image::images/kibana-ingest-manager-integrations-nginx.png[{ingest-manager} app showing Nginx Integration]

Click on the Nginx integration to see more details about it. On the upper right, select **Create data source**.

[role="screenshot"]
image::images/kibana-ingest-manager-integrations-nginx-overview.png[{ingest-manager} app showing Nginx Integration overview]

On the **Add data source** screen, click to select the default agent configuration from the list, and scroll down to inspect or change the
default settings that have been set for you. When you're done, click **Save data source**. 

[role="screenshot"]
image::images/kibana-ingest-manager-integrations-nginx-add-datasource.png[{ingest-manager} app Add data source screen]

Navigate back to the main **Integrations** tab and select **Installed Integrations**. The Nginx integration has been installed and
should show up in this list. (Note that the **System** and **Elastic Endpoint** integrations have been installed by default.)

[role="screenshot"]
image::images/kibana-ingest-manager-integrations-list-installed.png[{ingest-manager} app showing installed integrations]

Navigate to **Configurations** and click on the Default config in the list. On the detail view, the newly created data source should appear in the list. (Note that the `system-1` data source has been created by default.)

[role="screenshot"]
image::images/kibana-ingest-manager-configurations-default-with-nginx.png[{ingest-manager} app showing default agent configuration with nginx-1 datasource]

[float]
[[install-run-elastic-agent]]
== Step 3: Install and run {agent}

{agent} is a single, unified agent that you can deploy to hosts or containers to collect data and send it to the {stack}. Behind the scenes, {agent} runs the {beats} shippers or Endpoint required for your configuration. It can be configured manually or from the {ingest-manager} app in {kib}.

To learn how to install {agent}, see the {agent} installation topic.

//TODO: Make this an active link to <<elastic-agent-installation-configuration>>,
//or use an asciidoc include to pull in installation instructions.

[float]
[[agent-standalone-mode]]
=== Standalone mode

To configure {agent} manually, navigate to **Configurations** in the {ingest-manager} app and click on the Default config in the list. Then select the **YAML** tab to access the configuration for {agent}. Copy the content and put it into a file `elastic-agent-standalone.yml` on the system where you have installed {agent}.

[role="screenshot"]
image::images/kibana-ingest-manager-configurations-default-yaml.png[{ingest-manager} app showing default agent configuration in YAML format]

Please note that the configuration file generated by the {ingest-manager} app already contains the correct {es} address and port for your setup. If you run everything locally, this will be `127.0.0.1:9200`. If you are using our https://www.elastic.co/cloud/elasticsearch-service[hosted {ess}] on
{ecloud}, this will correspond to the {es} endpoint URL that is also available under **Endpoints** as described in {cloud}/ec-working-with-elasticsearch.html[Work with {es}].

You will also have to add your {es} username and password to the `outputs` section in the configuration file:

[source,yaml]
----
[...]
outputs:
  default:
    type: elasticsearch
    hosts:
      - 'HOST:PORT'
    username: ES_USERNAME
    password: ES_PASSWORD
datasources:
[...]
----

Run {agent} with the command:

[source,shell]
----
$ ./elastic-agent -c elastic-agent-standalone.yml run
----

[float]
[[agent-fleet-mode]]
=== {fleet} mode

To use {fleet} to configure {agent}, you first need to enable {fleet} in the {ingest-manager} app. To do so, navigate to the **{fleet}** tab and click **Create user and enable Fleet**.

[role="screenshot"]
image::images/kibana-ingest-manager-fleet-enable.png[{ingest-manager} app showing prompt to enable {fleet}]

On the next page, click on **Enroll new agent** to start the enrollment. Select an agent configuration (or stay with the default) and copy the command to enroll the agent from the command line. This line contains your {kib} URL and an enrollment key that has been generated by the {ingest-manager} app.

[role="screenshot"]
image::images/kibana-ingest-manager-fleet-enrol.png[{ingest-manager} app showing agent enrollment dialog]

In the directory where you installed {agent}, paste the copied command to enroll the agent. Please note that this command will overwrite the `elastic-agent.yml` file in that directory.

[source,shell]
----
./elastic-agent enroll KIBANA_URL ENROLLMENT_KEY

The {agent} is currently in Experimental and should not be used in production
This will replace your current settings. Do you want to continue? [Y/n]:
----

After that, run the agent with:

[source,shell]
----
./elastic-agent run
----

In the {ingest-manager} app, click **Continue** to get back to the **{fleet}** tab. This will now show the newly enrolled agent.

[role="screenshot"]
image::images/kibana-ingest-manager-fleet-agents.png[{ingest-manager} app showing enrolled agents]

When you want to unenroll an agent, choose **Unenroll** from the **Actions** menu for this agent. This will invalidate the API key the agent is using to connect to {es}. The {agent} will continue to run, but will not be able to send data, and show this error instead:

[source,shell]
----
invalid api key to authenticate with fleet
----

[float]
[[view-data]]
== Step 4: View your data

Navigate to the **Data streams** tab in the {ingest-manager} app to inspect the data that is sent by the agent. From the **Actions** column you can navigate to the dashboards corresponding to the data type that is sent.

[role="screenshot"]
image::images/kibana-ingest-manager-datastreams.png[{ingest-manager} app showing data streams list]
