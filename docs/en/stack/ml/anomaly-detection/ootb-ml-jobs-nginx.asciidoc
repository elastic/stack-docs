["appendix",role="exclude",id="ootb-ml-jobs-nginx"]
= Nginx {anomaly-detect} configurations

// tag::nginx-jobs[]

These {anomaly-job} wizards appear in {kib} if you use the Nginx integration in
{fleet} or you use {filebeat} to ship access logs from your
http://nginx.org/[Nginx] HTTP servers to {es}. The jobs assume that you use
fields and data types from the Elastic Common Schema (ECS).

[discrete]
[[nginx-access-logs]]
== Nginx access logs

These {anomaly-jobs} find unusual activity in HTTP access logs.

For more details, see the {dfeed} and job definitions in
https://github.com/elastic/integrations/blob/{branch}/packages/nginx/kibana/ml_module/nginx-Logs-ml.json[GitHub].
Note that these jobs are available in {kib} only if data exists that matches the
{dfeed} query.

low_request_rate_nginx::
Detects low request rates.

Job details:::

* Analyzes request rates (using the <<ml-count,`low_count` function>>).

Required {beats} or {agent} integrations:::

* Nginx integration 

source_ip_request_rate_nginx::
Detects unusual source IPs.

Job details:::

* Analyzes request rates (using the <<ml-count,`high_count` function>>)
relative to all the source IPs (`over_field_name` is `source.address`).

Required {beats} or {agent} integrations:::

* Nginx integration 

source_ip_url_count_nginx::
Detects unusual source IPs.

Job details:::

* Analyzes distinct counts of URLs (using the
<<ml-distinct-count,`high_distinct_count` function>> on the `url.original`
field) relative to all the source IPs (`over_field_name` is `source.address`).

Required {beats} or {agent} integrations:::

* Nginx integration 

status_code_rate_nginx::
Detects unusual status code rates.

Job details:::

* Analyzes request rates (using the <<ml-count,`count` function>>) split by
status code (`partition_field_name` is `http.response.status_code`).

Required {beats} or {agent} integrations:::

* Nginx integration 

visitor_rate_nginx::
Detects unusual visitor rates.

Job details:::

* Analyzes request rates using the <<ml-nonzero-count,`non_zero_count` function>>.

Required {beats} or {agent} integrations:::

* Nginx integration  

[discrete]
[[nginx-access-logs-filebeat]]
== Nginx access logs ({filebeat})

These legacy {anomaly-jobs} find unusual activity in HTTP access logs. For the 
latest versions, install the Nginx integration in {fleet}; see
<<nginx-access-logs>>.

For more details, see the {dfeed} and job definitions in
https://github.com/elastic/kibana/tree/{branch}/x-pack/plugins/ml/server/models/data_recognizer/modules/nginx_ecs/ml[GitHub].

These configurations are only available if data exists that matches the 
recognizer query specified in the
https://github.com/elastic/kibana/blob/{branch}/x-pack/plugins/ml/server/models/data_recognizer/modules/nginx_ecs/manifest.json#L8[manifest file].


low_request_rate_ecs::
Detects low request rates.

Job details:::

* Analyzes request rates (using the <<ml-count,`low_count` function>>).
  
Required {beats} or {agent} integrations:::

* {filebeat}  

source_ip_request_rate_ecs::
Detects unusual source IPs.

Job details:::

* Analyzes request rates (using the <<ml-count,`high_count` function>>)
relative to all the source IPs (`over_field_name` is `source.address`).

Required {beats} or {agent} integrations:::

* {filebeat}  

source_ip_url_count_ecs::
Detects unusual source IPs.

Job details:::

* Analyzes distinct counts of URLs (using the
<<ml-distinct-count,`high_distinct_count` function>> on the `url.original`
field) relative to all the source IPs (`over_field_name` is `source.address`).
  
Required {beats} or {agent} integrations:::

* {filebeat}  

status_code_rate_ecs::
Detects unusual status code rates.

Job details:::

* Analyzes request rates (using the <<ml-count,`count` function>>) split by
status code (`partition_field_name` is `http.response.status_code`).

Required {beats} or {agent} integrations:::

* {filebeat}  

visitor_rate_ecs::
Detects unusual visitor rates.

Job details:::

* Analyzes request rates using the <<ml-nonzero-count,`non_zero_count` function>>.
  
Required {beats} or {agent} integrations:::

* {filebeat}  

// end::nginx-jobs[]
