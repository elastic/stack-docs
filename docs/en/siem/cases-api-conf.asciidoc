:sn: ServiceNow
[[cases-api-conf]]
=== Configuring {sn} integration

You can create {sn} incidents from {siem-soln} cases. This requires registering
a {sn} connector using the {kib} actions API. Once you have at least one
registered connector, you can retrieve and delete connectors, and update
their settings.

==== Register {sn} connector

Registers a {sn} connector, which can then be used to open {sn} incidents from
{siem-soln} cases.

===== Request URL

`POST /api/action`

===== Request body

A JSON object with these fields:

[width="100%",options="header"]
|==============================================
|Name |Type |Description |Required

|`actionTypeId` |String |Must be: `.servicenow`.^1^ |Yes
|`config` |<<config-schema, config>|Object containing the action's
configuration. |Yes
|`secrets` |Object a|Object containing the {sn} account credentials used
to create and update incidents:

* `username`: The account username (String).
* `password`: The account password (String).

|Yes

|`name` |String |The registered {sn} connector. |Yes
|==============================================
^1^For information about other action types, see.

[[config-schema]]
*`config` schema*

[width="100%",options="header"]
|==============================================
|Name |Type |Description |Required

|`casesConfiguration` |Object a|Contains a `mapping` array, which determines how {siem-soln} cases are mapped to {sn} incidents:

* `source`: The name of the {siem-soln} case field, which can be `title`,
`description`, or `comments` (String).
* `target`: The name of the mapped {sn} incident field. For example: `short_description`, `description`, and `comments` (String).
* `actionType`: Determines whether updates to existing cases overwrite or
append the {sn} incident fields. Valid values are `overwrite` and
`append` (String).

|Yes

|`apiUrl` |String |URL of the {sn} instance. |Yes
|==============================================

===== Example request

[source,sh]
--------------------------------------------------
POST api/action
{
  "actionTypeId": ".servicenow",
  "config": {
    "casesConfiguration": {
      "mapping": [
        {
          "source": "title",
          "target": "short_description",
          "actionType": "overwrite"
        },
        {
          "source": "description",
          "target": "description",
          "actionType": "overwrite"
        },
        {
          "source": "comments",
          "target": "comments",
          "actionType": "append"
        }
      ]
    },
    "apiUrl": "https://dev87359.service-now.com"
  },
  "secrets": {
    "username": "admin",
    "password": "securePassword123!"
  },
  "name": "ServiceNow"
}
--------------------------------------------------
// KIBANA

===== Response code

`200`:: 
   Indicates a successful call.
   
===== Response payload

A JSON object with a connector `id` that is required to push cases to {sn}.

===== Example response

[source,json]
--------------------------------------------------
{
  "id": "7349772f-421a-4de3-b8bb-2d9b22ccee30",
  "actionTypeId": ".servicenow",
  "name": "ServiceNow",
  "config": {
    "casesConfiguration": {
      "mapping": [
        {
          "source": "title",
          "target": "short_description",
          "actionType": "overwrite"
        },
        {
          "source": "description",
          "target": "description",
          "actionType": "overwrite"
        },
        {
          "source": "comments",
          "target": "comments",
          "actionType": "append"
        }
      ]
    },
    "apiUrl": "https://dev87359.service-now.com"
  }
}
--------------------------------------------------

==== Create or update a {sn} incident

Creates a new or updates an existing {sn} incident from a {siem-soln} case.

===== Request URL

`POST /api/action/<connector ID>/_execute`

===== URL parts

The URL must include the `id` of the {sn} action connector.

===== Request body

A JSON object with these fields:

[width="100%",options="header"]
|==============================================
|Name |Type |Description |Required

|`params` |<<case-conf-params, params>|Contains the {siem-soln} case details
for which you are opening a {sn} incident. |Yes
|==============================================

[[case-conf-params]]
*`params` schema*

|==============================================
|Name |Type |Description |Required

|`caseId` |String |The case ID. |Yes
|`title` |String |The case title. |No
|`description` |String |The case description. |No
|`comments` |Object[] a|Array containing case comments:

* `commentId`: The comment ID (String).
* `version`: The comment version (String).
* `comment`: The comment text (String).

|No

|`incidentId` |String |The {sn} incident ID. Required when updating an existing
{sn} incident. |No
|==============================================

===== Example requests

Creates a new {sn} incident:

[source,sh]
--------------------------------------------------
POST api/action/7349772f-421a-4de3-b8bb-2d9b22ccee30/_execute
{
  "params": {
    "caseId": "eb696730-66a2-11ea-be1b-2bd3fef48984",
    "title": "This case will self-destruct in 5 seconds",
    "description": "James Bond clicked on a highly suspicious email banner advertising cheap holidays for underpaid civil servants. Operation bubblegum is active. Repeat - operation bubblegum is now active!",
    "comments": [
      {
        "commentId": "f215d6a0-6755-11ea-a1c2-e3a8bc9f7aca",
        "version": "WzM3LDFd",
        "comment": "Start operation bubblegum immediately! And chew fast!"
      }
    ]
  }
}
--------------------------------------------------
// KIBANA

Updates an existing {sn} incident:

[source,sh]
--------------------------------------------------
POST api/action/7349772f-421a-4de3-b8bb-2d9b22ccee30/_execute
{
  "params": {
    "caseId": "eb696730-66a2-11ea-be1b-2bd3fef48984",
    "comments": [
      {
        "commentId": "11d967b0-6795-11ea-86e7-8f72afa8e6d9",
        "version": "Wzg0LDFd",
        "comment": "That is nothing - Ethan Hunt answered a targeted social media campaign promoting phishy pension schemes to IMF operatives."
      }
    ],
    "incidentId": "d1d2c8562f2b001032645d372799b6cd"
  }
}
--------------------------------------------------
// KIBANA

===== Response code

`200`:: 
   Indicates a successful call.
   
===== Response payload

A JSON object with the {sn} incident number.

===== Example response

[source,json]
--------------------------------------------------
{
  "status": "ok",
  "actionId": "7349772f-421a-4de3-b8bb-2d9b22ccee30",
  "data": {
    "incidentId": "d1d2c8562f2b001032645d372799b6cd",
    "number": "INC0010001",
    "pushedDate": "2020-03-16T10:36:56.000Z",
    "comments": [
      {
        "commentId": "f215d6a0-6755-11ea-a1c2-e3a8bc9f7aca",
        "pushedDate": "2020-03-16T10:36:57.000Z"
      }
    ]
  }
}
--------------------------------------------------

==== Get ServiceNow connectors

Retrieves all registered {sn} connectors.




