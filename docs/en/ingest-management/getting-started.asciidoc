[[ingest-management-getting-started]]
[role="xpack"]
= Get started with ingest management

++++
<titleabbrev>Get started</titleabbrev>
++++

experimental[]

This guide describes how to get started with the new {ingest-management}
capabilities available in this release.

// tag::experimental-warning[]
This early release of {ingest-management} is experimental. We invite you to
install and test these capabilities **in a test environment**. You might run
into problems and need to modify your setup to get this feature running. Please
do not enable or use {ingest-management} in a production environment.
// end::experimental-warning[]

For feedback and questions, please contact us in the
https://ela.st/ingest-manager-feedback[discuss forum].

//TODO: Add link to limitations topic after it is merged. 

[float]
[[ingest-manager-prereqs]]
== Prerequisites

Before you begin, please read <<ingest-management-limitations>>.

To use this **experimental** release of {ingest-management}, you need:

* An {es} cluster and {kib} (version 7.8) with a basic license.
You can use our https://www.elastic.co/cloud/elasticsearch-service[hosted {ess}]
on {ecloud}, or {stack-gs}/get-started-elastic-stack.html[install the {stack} on
your own hardware].

* A user with the superuser role. See {ref}/built-in-roles.html[Built-in roles].

* On self-managed clusters, the following settings are required. If you're using
our https://www.elastic.co/cloud/elasticsearch-service[hosted  {ess}] on
{ecloud}, these settings are already enabled.

** In your {es} configuration, enable: 
+
- {ref}/configuring-security.html[{es} security]. Set `xpack.security.enabled`
to `true`.
- {ref}/security-settings.html#api-key-service-settings[API key service]. Set
`xpack.security.authc.api_key.enabled` to `true`.

** In your {kib} configuration, enable:
+
- {kibana-ref}/using-kibana-with-security.html[{kib} security]. Set `xpack.security.enabled`
to `true`.
- {kibana-ref}/configuring-tls.html[TLS]. As an alternative, you can disable the
TLS check by setting `xpack.ingestManager.fleet.tlsCheckDisabled` to `true`. For
example, you might want to disable TLS checking if {kib} is behind a proxy that
terminates the SSL connection.

[float]
[[enable-ingest-management]]
== Step 1: Enable {ingest-management}

To enable {ingest-management}:

. Add the following setting to the {kib} configuration:
+
[source,yaml]
----
xpack.ingestManager.enabled: true
----
+
* On our
https://www.elastic.co/cloud/elasticsearch-service[hosted {ess}] on
{ecloud}, add the setting to the {kib} user settings as described in 
{cloud}/ec-manage-kibana-settings.html[Add {kib} user settings].
* On a self-managed stack, add the setting to the {kib} configuration as
described in
{kibana-ref}/ingest-manager-settings-kb.html[{ingest-manager} settings].

. Verify that {ingest-management} has been correctly enabled:
.. Log in to {kib} and go to **Management > {ingest-manager}**.
+
If the menu entry is visible, and you see the following start page
for {ingest-manager}, {ingest-management} is successfully enabled.
+
[role="screenshot"]
image::images/kibana-ingest-manager-start.png[{ingest-manager} app in {kib}]

//TODO: Add tabbed panel when the code is stable.

[float]
[[install-integration]]
== Step 2: Install an integration and create a data source

{ingest-manager} provides _integrations_ that bundle various assets needed to
ingest and visualize data.

In this guide, we assume that you have `nginx` running on some of your
infrastructure, and want to collect logs and metrics from it. To do so:

. In the {ingest-manager} app, click the **Integrations** tab and use the
search bar to find the Nginx integration.
+
[role="screenshot"]
image::images/kibana-ingest-manager-integrations-nginx.png[{ingest-manager} app showing Nginx Integration]
. Click the Nginx integration to see more details about it, and then click
**Create data source**.
+
[role="screenshot"]
image::images/kibana-ingest-manager-integrations-nginx-overview.png[{ingest-manager} app showing Nginx Integration overview]

. On the **Add data source** page, click the default Agent configuration
to select it, then scroll down to inspect or change the default settings.

. If your logs are not in the default location, click the down arrow next to
enabled streams and change the **Paths** field. 

. When you're done, click **Save data source**. 
+
[role="screenshot"]
image::images/kibana-ingest-manager-integrations-nginx-add-datasource.png[{ingest-manager} app Add data source screen]

. To verify that the integration is installed, click the **Integrations** tab
and then click **Installed Integrations**.
+
The Nginx integration has been installed and should show up in this list. Note
that the **System** and **Elastic Endpoint** integrations are installed by
default.
+
[role="screenshot"]
image::images/kibana-ingest-manager-integrations-list-installed.png[{ingest-manager} app showing installed integrations]

. Select the **Configurations** tab, and in the Agent configurations list, click
the default config.
+
The newly created data source should appear on the **Data sources** tab.
Note that the `system-1` data source has been created by default.
+
[role="screenshot"]
image::images/kibana-ingest-manager-configurations-default-with-nginx.png[{ingest-manager} app showing default Agent configuration with nginx-1 datasource]

[float]
[[install-run-elastic-agent]]
== Step 3: Install and run {agent}

include::{beats-repo-dir}/x-pack/elastic-agent/docs/elastic-agent.asciidoc[tag=agent-install-intro]

//REVIEWERS: I know this section makes the docs longer, but it's easier for users
//Don't worry too much about the length because I have some code for a tabbed
//panel that I will use to display this content. I'll follow up later with a PR
//that adds this code. 

include::{beats-repo-dir}/x-pack/elastic-agent/docs/install-elastic-agent.asciidoc[tag=install-elastic-agent]

To configure {agent}, you can use the {ingest-manager} app in {kib} (see
<<agent-fleet-mode,{fleet} mode>>), or configure it manually (see
<<agent-standalone-mode, Standalone mode>>).

[float]
[[agent-fleet-mode]]
=== {fleet} mode

To use {fleet} to configure {agent}:

. Enable {fleet} in the {ingest-manager} app. To do so, click the **{fleet}**
tab and click **Create user and enable Fleet**.
+
[role="screenshot"]
image::images/kibana-ingest-manager-fleet-enable.png[{ingest-manager} app showing prompt to enable {fleet}]

. On the **Fleet** tab, click **Enroll new agent** to start the enrollment.
Select an Agent configuration (or accept the default) and copy the command for
enrolling the Agent.
+
The copied command contains your {kib} URL and an enrollment key that was
generated by the {ingest-manager} app.
+
[role="screenshot"]
image::images/kibana-ingest-manager-fleet-enrol.png[{ingest-manager} app showing Agent enrollment dialog]

. In the directory where you installed {agent}, paste the command to enroll the
Agent. Note that this command will overwrite the `elastic-agent.yml` file in
that directory.
+
["source","sh",subs="attributes"]
----
./elastic-agent enroll KIBANA_URL ENROLLMENT_KEY

The {agent} is currently in Experimental and should not be used in production
This will replace your current settings. Do you want to continue? [Y/n]:
----

. Run the Agent:
+
[source,shell]
----
./elastic-agent run
----

. In the {ingest-manager} app, click **Continue** to go to the **{fleet}**
tab, where you should see the newly enrolled Agent.
+
[role="screenshot"]
image::images/kibana-ingest-manager-fleet-agents.png[{ingest-manager} app showing enrolled Agents]

If you run into problems, see <<ingest-management-troubleshooting>>.

TIP: To unenroll an Agent, choose **Unenroll** from the **Actions**
menu for the Agent. This will invalidate the API key the Agent uses to
connect to {es}. The {agent} will continue to run, but will not be able to send
data. It will show this error instead:
`invalid api key to authenticate with fleet`.

[float]
[[agent-standalone-mode]]
=== Standalone mode (manual configuration)

To configure {agent} manually:

. In the {ingest-manager} app, click the **Configurations** tab, and in the
Agent configurations list, click the default config.

. Select the **YAML** tab to see the configuration for {agent}. Copy the
content and put it into a file named `elastic-agent-standalone.yml` on the
system where {agent} is installed.
+
[role="screenshot"]
image::images/kibana-ingest-manager-configurations-default-yaml.png[{ingest-manager} app showing default Agent configuration in YAML format]
+
NOTE: The configuration file generated by the {ingest-manager} app already
contains the correct {es} address and port for your setup. If you run everything
locally, the address is `127.0.0.1:9200`. If you use our
https://www.elastic.co/cloud/elasticsearch-service[hosted {ess}] on
{ecloud}, the address corresponds to the {es} endpoint URL that is listed
under **Endpoints** as described in
{cloud}/ec-working-with-elasticsearch.html[Work with {es}].

. Add your {es} username and password to the `outputs` section in the
configuration file:
+
[source,yaml]
----
[...]
outputs:
  default:
    type: elasticsearch
    hosts:
      - 'HOST:PORT'
    username: ES_USERNAME
    password: ES_PASSWORD
datasources:
[...]
----


. Run {agent}:
+
[source,shell]
----
./elastic-agent -c elastic-agent-standalone.yml run
----

[float]
[[view-data]]
== Step 4: View your data

In the {ingest-manager} app, click the **Data streams** tab to inspect the data
that is sent by the Agent. From the **Actions** column, you can navigate to the
dashboards corresponding to the data type that is sent.

[role="screenshot"]
image::images/kibana-ingest-manager-datastreams.png[{ingest-manager} app showing data streams list]

//Adding this section for future use. Might be premature to add this for the
//experimental release.

//[float]
//== What's next?

//Now that you have your logs streaming into {es}, learn how to unify your logs,
//metrics, uptime, and application performance data. Use the Observability apps in
//{kib} to search across all your data.
