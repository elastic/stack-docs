[[install-infrastructure-monitoring]]
[role="xpack"]
== Get up and running

beta[]

To get up and running with infrastructure monitoring, you need:

* An Elasticsearch cluster and Kibana (version 6.5 or later) with a basic
license. To learn how to get started quickly, see
{stack-gs}/get-started-elastic-stack.html[Getting started with the {stack}].
+
[TIP]
==============
You can skip having to install {es} and {kib} by using our
https://www.elastic.co/cloud/elasticsearch-service[hosted {es} Service] on
Elastic Cloud. The {es} Service is available on both AWS and GCP.
https://www.elastic.co/cloud/elasticsearch-service/signup[Try out the {es}
Service for free].
==============

* {beats} shippers (version 6.5 or later) installed on each system you want to
monitor

You might also need to modify UI settings in {kib} to change default behaviors,
such as the index pattern used to query the data, and the timestamp field used
for sorting. For more information, see
{kibana-ref}/infrastructure-ui-settings-kb.html[{infra-ui} UI Settings] and
{kibana-ref}/logs-ui-settings-kb.html[{logs-ui} UI Settings].

[float]
[[install-beats-for-infra-UI]]
=== Install {beats} shippers

To populate the <<infrastructure-ui-overview,{infra-ui} UI>> with metrics and
log data, you need to install and configure the following shippers:

* https://www.elastic.co/products/beats/metricbeat[{metricbeat}] for metrics
* https://www.elastic.co/products/beats/filebeat[{filebeat}] for log data

To learn how to install and configure the shippers, do one of the following:

* Follow the instructions in the Add Data section of the {kib} home page. Click
*Add log data* or *Add metrics*, and follow the links for the types of data you
want to collect.
+
[role="screenshot"]
image::add-data.png[]

* If your data source isn't in the list, or you want to install {beats} the old
fashioned way:

** Follow the
{metricbeat-ref}/metricbeat-getting-started.html[{metricbeat} getting started]
and enable modules for the metrics you want to collect.

** Follow the
{filebeat-ref}/filebeat-modules-quickstart.html[{filebeat} modules quick start]
and enable modules for the logs you want to collect. If there is no module
for the logs you want to collect, see the
{filebeat-ref}/filebeat-getting-started.html[{filebeat} getting started] to
learn how to configure inputs.

For either approach, you need to enable modules in {filebeat} and {metricbeat}
to populate the {infra-ui} UI with data.


[float]
==== Which modules and configuration options do I enable?

To populate the *Hosts* view and add logs, enable:

* {metricbeat-ref}/metricbeat-module-system.html[{metricbeat} `system` module] (enabled by default)
* {filebeat-ref}/filebeat-module-system.html[{filebeat} `system` module]
* {filebeat-ref}/filebeat-modules.html[Other {filebeat} modules] needed for
your environment, such as `apache2`, `redis`, and so on
* {metricbeat-ref}/add-host-metadata.html[{metricbeat} `add_host_metadata` processor] (enabled by default)
* {metricbeat-ref}/add-cloud-metadata.html[{metricbeat} `add_cloud_metadata` processor] (enabled by default)

To populate the *Docker* view and add logs, enable:

* {metricbeat-ref}/metricbeat-module-docker.html[{metricbeat} `docker` module]
* {metricbeat-ref}/add-docker-metadata.html[{metricbeat} `add_docker_metadata` processor]
* {filebeat-ref}/filebeat-input-docker.html[{filebeat} `docker` input]
* {filebeat-ref}/add-docker-metadata.html[{filebeat} `add_docker_metadata` processor]

To populate the *Kubernetes* view and add logs, enable:

* {metricbeat-ref}/metricbeat-module-kubernetes.html[{metricbeat} `kubernetes`
module]
* {metricbeat-ref}/add-kubernetes-metadata.html[{metricbeat} `add_kubernetes_metadata` processor]
* {filebeat-ref}/filebeat-input-docker.html[{filebeat} `docker` input]
* {filebeat-ref}/add-kubernetes-metadata.html[{filebeat} `add_kubernetes_metadata` processor]

[float]
==== Which fields are used for the metrics on the Infrastructue home page?

The metrics listed below are provided by the Beats Shippers. Each system type requires their corresponding identity field to be in the same event document:

* Hosts require `host.name`
* Docker containers require `container.id`
* Kibernetes pods require `kibernetes.pod.uid`


[float]
===== Host Metrics

*CPU Usage*:: Average of `system.cpu.user.pct` added to the average of `system.cpu.system.pct` divided by `system.cpu.cores`

*Memory Usage*:: Average of `system.memory.actual.used.pct`

*Load*:: Average of `system.load.5`

*Inbound Traffic*:: Derivative of the max of `system.netowrk.in.bytes` scaled to a 1 second rate

*Outbound Traffic*:: Derivative of the max of `system.netowrk.out.bytes` scaled to a 1 second rate

*Log Rate*:: Derivative of the cumulative sum of the document count scaled to a 1 second rate.
This metric relies on the same indices as the logs.


[float]
===== Docker Container Metrics

*CPU Usage*:: Average of `docker.cpu.total.pct`

*Memory Usage*:: Average of `docker.memory.usage.pct`

*Inbound Traffic*:: Derivative of the max of `docker.network.in.bytes` scaled to a 1 second rate

*Outbound Traffic*:: Derivative of the max of `docker.network.out.bytes` scaled to a 1 second rate


[float]
===== Kubernetes Pod Metrics

*CPU Usage*:: Average of `kubernetes.pod.cpu.usage.node.pct`

*Memory Usage*:: Average of `kubernetes.pod.memory.usage.pct`

*Inbound Traffic*:: Derivative of the max of `kubernetes.pod.network.rx.bytes` scaled to a 1 second rate

*Outbound Traffic*:: Derivative of the max of `kubernetes.pod.network.tx.bytes` scaled to a 1 second rate



[float]
==== More about container monitoring

If you're monitoring containers, you can use autodiscover to automatically apply
configuration changes in response to changes in your containers. To learn how,
see:

* {filebeat-ref}/configuration-autodiscover.html[{filebeat} autodiscover
configuration]
* {metricbeat-ref}/configuration-autodiscover.html[{metricbeat} autodiscover
configuration]


[float]
==== Known Workarounds

*Running Metricbeat <=6.5 with Kibana 6.6+*:: For Kubernetes, you will need to change the "Pod ID" field in the "Configure Source" panel (`xpack.infra.sources.default.fields.pod` in `config/kibana.yml` for Kibana 6.6) to `kubernetes.pod.name`. There is a caveat for this workaround; if you have two pods with the same name, only one will be visible in the UI.
