[role="xpack"]
[[ml-dfa-overview]]
= {dfanalytics-cap} overview
[subs="attributes"]
++++
<titleabbrev>Overview</titleabbrev>
++++
:keywords: {ml-init}, {stack}, {dfanalytics}, overview
:description: An introduction to {ml} {dfanalytics}, which enables you to  \
analyze your data using classification, regression, and outlier detection \
algorithms and to generate trained models for predictions on new data.

{dfanalytics-cap} enable you to perform different analyses of your data and 
annotate it with the results. By doing this, it provides additional insights 
into the data. <<dfa-outlier-detection,{oldetection-cap}>> identifies unusual 
data points in the data set. <<dfa-regression,{regression-cap}>> makes 
predictions on your data after it determines certain relationships among your 
data points. <<dfa-classification,{classification-cap}>> predicts the class or 
category of a given data point in a data set. <<ml-inference,{infer-cap}>> 
enables you to use trained {ml} models against incoming data in a continuous 
fashion.

The process leaves the source index intact, it creates a new index that contains 
a copy of the source data and the annotated data. You can slice and dice the 
data extended with the results as you normally do with any other data set. Read 
<<ml-dfa-phases>> for more information.

You can evaluate the {dfanalytics} performance by using the {evaluatedf-api} 
against a marked up data set. It helps you understand error distributions and 
identifies the points where the {dfanalytics} model performs well or less 
trustworthily.

Consult <<ml-supervised-workflow>> to learn more about how to make predictions 
with supervised learning.


[width="50%"]
.{dfanalytics-cap} overview table
|===
| {dfanalytics-cap} type    | Learning type

| {oldetection}             | unsupervised 
| {regression}              | supervised    
| {classification}          | supervised    
|===
