[[anomaly-how-tos]]
= How-to guides
++++
<titleabbrev>How-tos</titleabbrev>
++++

Though it is quite simple to analyze your data and provide quick {ml} results,
gaining deep insights might require some additional planning and configuration.
The guides in this section describe some best practices for generating useful
{ml} results and insights from your data.

* <<ml-configuring-alerts, Generating alerts for {anomaly-jobs}>>
* <<ml-configuring-aggregation, Aggregating data for faster performance>>
* <<ml-configuring-transform, Using runtime fields in {dfeeds}>>
* <<ml-configuring-detector-custom-rules>>
* <<ml-configuring-categories>>
* <<ml-configuring-populations>>
* <<ml-reverting-model-snapshot>>
* <<geographic-anomalies>>
* <<mapping-anomalies>>
* <<ml-configuring-url>>
* <<ml-jobs-from-lens>>
* <<move-jobs>>


[discrete]
[[anomaly-examples-blog-posts]]
== {anomaly-detect-cap} examples in blog posts

The blog posts listed below show how to get the most out of Elastic {ml} 
{anomaly-detect}.

* {blog-ref}sizing-machine-learning-with-elasticsearch[Sizing for {ml} with {es}]
* {blog-ref}filtering-input-data-to-refine-machine-learning-jobs[Filtering input data to refine {ml-jobs}]
* {blog-ref}temporal-vs-population-analysis-in-elastic-machine-learning[Temporal vs. population analysis in Elastic {ml}]
* {blog-ref}using-elasticsearch-and-machine-learning-for-it-operations[Using {es} and {ml} for IT Operations]
* {blog-ref}using-machine-learning-and-elasticsearch-for-security-analytics-deep-dive[Using {ml} and {es} for security analytics]
* {blog-ref}augmenting-results-with-user-annotations-for-elastic-machine-learning[User annotations for Elastic {ml}]
* {blog-ref}custom-elasticsearch-aggregations-for-machine-learning-jobs[Custom {es} aggregations for {ml-jobs}]
* {blog-ref}analysing-linux-auditd-anomalies-with-auditbeat-and-elastic-stack-machine-learning[Analysing Linux auditd anomalies with Auditbeat and {ml}]
* {blog-ref}how-to-optimize-elasticsearch-machine-learning-job-configurations-using-job-validation[How to optimize {es} {ml} job configurations using job validation]
* {blog-ref}interpretability-in-ml-identifying-anomalies-influencers-root-causes[Interpretability in {ml}: Identifying anomalies, influencers, and root causes]

There are also some examples in the {ml} folder in the https://github.com/elastic/examples[examples repository].


