[[cases-get-connector]]
=== Get current ServiceNow connector

Retrieves the currently used {sn} connector and its
<<case-closure-settings, case closure settings>>.

For more information on connectors, see <<cases-actions-api-connectors>>.

==== Request URL

`GET <kibana host>/<port>/api/cases/configure`

==== Example request

[source,sh]
--------------------------------------------------
GET api/cases/configure
--------------------------------------------------
// KIBANA

==== Response code

`200`:: 
   Indicates a successful call.
   
==== Response payload

A JSON object describing the connector.

==== Example response

[source,json]
--------------------------------------------------
{
  "connector_id": "7349772f-421a-4de3-b8bb-2d9b22ccee30",
  "closure_type": "close-by-user",
  "created_at": "2020-03-16T09:09:32.587Z",
  "created_by": {
    "full_name": "Mr Pink",
    "username": "pink"
  },
  "updated_at": "2020-03-16T11:28:58.576Z",
  "updated_by": {
    "full_name": "Mr Brown",
    "username": "brown"
  },
  "version": "Wzc3LDFd"
}
--------------------------------------------------

[[cases-find-connectors]]
=== Find ServiceNow connectors

Retrieves a paginated subset of all {sn} connectors.

==== Request URL

`GET <kibana host>/<port>/api/cases/configure/connectors/_find`

==== Example request

[source,sh]
--------------------------------------------------
GET api/cases/configure/connectors/_find
--------------------------------------------------
// KIBANA

==== Response code

`200`:: 
   Indicates a successful call.
   
==== Response payload

A JSON object describing the connectors and their settings.

==== Example response

[source,json]
--------------------------------------------------
{
  "page": 1,
  "perPage": 20,
  "total": 1,
  "data": [
    {
      "id": "7349772f-421a-4de3-b8bb-2d9b22ccee30",
      "actionTypeId": ".servicenow",
      "name": "ServiceNow",
      "config": {
        "casesConfiguration": {
          "mapping": [
            {
              "actionType": "overwrite",
              "source": "title",
              "target": "short_description"
            },
            {
              "actionType": "overwrite",
              "source": "description",
              "target": "description"
            },
            {
              "actionType": "append",
              "source": "comments",
              "target": "comments"
            }
          ]
        },
        "apiUrl": "https://dev87359.service-now.com"
      },
      "referencedByCount": 0
    }
  ]
}
--------------------------------------------------

[[case-closure-settings]]
=== Update case closure settings

Updates a connector's case closure settings.

You can define whether or not a case is automatically closed in the {siem-app}
when it is pushed to {sn}.

==== Request URL

`PATCH <kibana host>/<port>/api/cases/configure`

==== Request body

A JSON object with these fields:

|==============================================
|Name |Type |Description |Required

|`connector_id` |String |The connector ID. |Yes
|`closure_type` |String a|Determines whether a case is automatically closed in
the {siem-app} when it is pushed to {sn}. Valid values are:

* `close-by-pushing`: {siem-app} cases are automatically closed when they
are pushed to {sn}.
* `close-by-user`: {siem-app} cases are not automatically closed.

|Yes

|`version` |String |The connector version. |Yes
|==============================================

NOTE: Call <<cases-get-connector>> to retrieve the connector ID and version value.

==== Example request

[source,sh]
--------------------------------------------------
PATCH api/cases/configure
{
  "connector_id": "7349772f-421a-4de3-b8bb-2d9b22ccee30",
  "closure_type": "close-by-pushing",
  "version": "Wzk0LDFd"
}
--------------------------------------------------
// KIBANA

==== Response code

`200`:: 
   Indicates a successful call.

==== Example response

[source,json]
--------------------------------------------------
{
  "connector_id": "7349772f-421a-4de3-b8bb-2d9b22ccee30",
  "closure_type": "close-by-pushing",
  "created_at": "2020-03-16T09:09:32.587Z",
  "created_by": {
    "full_name": "Mr Pink",
    "username": "pink"
  },
  "updated_at": "2020-03-16T16:25:45.651Z",
  "updated_by": {
    "full_name": "Mr Brown",
    "username": "brown"
  },
  "version": "Wzk1LDFd"
}
--------------------------------------------------

// === Update connector field mapping settings
// 
// Updates a connector's field mapping settings.
// 
// You can map fields and define how they are updated when you push a case to {sn}.
// 
// ==== Request URL
// 
// `PATCH /api/cases/configure/connectors/<connector ID>`
// 
// ==== URL parts
// 
// The URL must include the the ServiceNow connector ID. Call <<get-sn-connector>>
// to retrieve the currently used connector ID, or <<cases-find-connectors>> to
// retrieve all registered connector IDs.
// 
// ==== Request body
// 
// A JSON object with the updated <<config-schema,`cases_configuration`>> object:
// 
// [width="100%",options="header"]
// |==============================================
// |Name |Type |Description |Required
// 
// |`cases_configuration` |Object a|Contains a `mapping` array, which determines how {siem-soln} cases are mapped to {sn} incidents:
// 
// * `source` (string): The name of the {siem-soln} case field, which can be
// `title`, `description`, or `comments`.
// * `target` (string): The name of the mapped {sn} incident field. For example:
// `short_description`, `description`, and `comments`.
// * `actionType` (string): Determines whether {siem-soln} case updates overwrite 
// or append to the mapped {sn} incident fields. Valid values are `overwrite` and
// `append`.
// 
// |Yes
// |==============================================
// 
// ==== Example request
// 
// [source,sh]
// --------------------------------------------------
// PATCH api/cases/configure/connectors/7349772f-421a-4de3-b8bb-2d9b22ccee30
// {
//   "cases_configuration": {
//     "mapping": [
//       {
//         "source": "title",
//         "target": "short_description",
//         "action_type": "overwrite"
//       },
//       {
//         "source": "description",
//         "target": "description",
//         "action_type": "overwrite"
//       },
//       {
//         "source": "comments",
//         "target": "comments",
//         "action_type": "append"
//       }
//     ]
//   }
// }
// --------------------------------------------------
// // KIBANA
// 
// ==== Response code
// 
// `200`:: 
//    Indicates a successful call.
// 
// ==== Example response
// 
// [source,json]
// --------------------------------------------------
// {
//   "cases_configuration": {
//     "mapping": [
//       {
//         "source": "title",
//         "target": "short_description",
//         "actionType": "overwrite"
//       },
//       {
//         "source": "description",
//         "target": "description",
//         "actionType": "overwrite"
//       },
//       {
//         "source": "comments",
//         "target": "comments",
//         "actionType": "append"
//       }
//     ]
//   }
// }
// --------------------------------------------------
