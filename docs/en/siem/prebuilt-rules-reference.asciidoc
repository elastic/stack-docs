[[prebuilt-rules]]
[role="xpack"]
== Prebuilt rule reference

beta[]

[width="100%",options="header"]
|==============================================
|Rule |Description |Tags |Version


|<<adding-hidden-file-attribute-via-attrib, Adding Hidden File Attribute via Attrib>> |Adversaries can add the `hidden` attribute to files to hide them from the user in an attempt to evade detection.  |[Windows]  |1

|<<adobe-hijack-persistence, Adobe Hijack Persistence>> |Detects writing executable files that are automatically launched when an Adobe product is started.  |[Windows]  |1

|<<adversary-behavior-detected-elastic-endpoint, Adversary Behavior - Detected - Elastic Endpoint>> |Elastic Endpoint Security Alert - Adversary behavior detected.  |[Endpoint]  |1

|<<audio-capture-via-powershell, Audio Capture via PowerShell>> |To try and listen to sensitive conversations, adversaries can leverage a computer's peripheral devices or applications to capture audio recordings.  |[Windows]  |1

|<<audio-capture-via-soundrecorder, Audio Capture via SoundRecorder>> |To try and listen to sensitive conversations, adversaries can leverage a computer's peripheral devices or applications to capture audio recordings.  |[Windows]  |1

|<<background-intelligent-transfer-service-bits-connecting-to-the-internet, Background Intelligent Transfer Service (BITS) connecting to the Internet>> |Adversaries may abuse the Background Intelligent Transfer Service (BITS) to download, execute, or clean up after performing a malicious action.  |[Windows]  |1

|<<bypass-uac-via-cmstp, Bypass UAC via Cmstp>> |Identifies User Account Control (UAC) bypasses using `cmstp.exe`. Attackers bypass UAC to stealthily execute code with elevated permissions.  |[Windows]  |1

|<<bypass-uac-via-event-viewer, Bypass UAC via Event Viewer>> |Identifies User Account Control (UAC) bypasses using `eventvwr.exe`. Attackers bypass UAC to stealthily execute code with elevated permissions.  |[Windows]  |1

|<<bypass-uac-via-sdclt, Bypass UAC via Sdclt>> |Identifies User Account Control (UAC) bypasses using `sdclt.exe`. Attackers bypass UAC to stealthily execute code with elevated permissions.  |[Windows]  |1

|<<certutil-network-connection, Certutil Network Connection>> |Identifies when `certutil.exe` makes a network connection. Adversaries can abuse `certutil.exe` to download a certificate or malware from a remote URL.  |[Windows]  |1

|<<clearing-windows-event-logs, Clearing Windows Event Logs>> |Identifies attempts to clear Windows event log stores. This is often done by attackers in an attempt to evade detection or destroy forensic evidence on a system.  |[Windows]  |1

|<<command-prompt-network-connection, Command Prompt Network Connection>> |Identifies when `cmd.exe` makes a network connection. Adversaries can abuse `cmd.exe` to download or execute malware from a remote URL.  |[Windows]  |1

|<<cred-dumping-detected-elastic-endpoint, Cred Dumping - Detected - Elastic Endpoint>> |Elastic Endpoint Security Alert - Credential dumping detected.  |[Endpoint]  |1

|<<cred-dumping-prevented-elastic-endpoint, Cred Dumping - Prevented - Elastic Endpoint>> |Elastic Endpoint Security Alert - Credential dumping prevented.  |[Endpoint]  |1

|<<cred-manipulation-detected-elastic-endpoint, Cred Manipulation - Detected - Elastic Endpoint>> |Elastic Endpoint Security Alert - Credential manipulation detected.  |[Endpoint]  |1

|<<cred-manipulation-prevented-elastic-endpoint, Cred Manipulation - Prevented - Elastic Endpoint>> |Elastic Endpoint Security Alert - Credential manipulation prevented.  |[Endpoint] |1

|<<dll-search-order-hijack, DLL Search Order Hijack>> |Detects writing `.dll` files to Windows file system locations that are known to be vulnerable to DLL search order hijacking.  |[Windows]  |1

|<<dns-activity-to-the-internet, DNS Activity to the Internet>> |This rule detects when an internal network client sends DNS traffic directly to the Internet. This is atypical behavior for a managed network, and can be indicative of malware, exfiltration, command and control, or, simply, misconfiguration. This DNS activity also impacts your organization's ability to provide enterprise monitoring and logging of DNS, and opens your network to a variety of abuses and malicious communications.  |[network]  |1

|<<delete-volume-usn-journal-with-fsutil, Delete Volume USN Journal with Fsutil>> |Identifies use of `fsutil.exe` to delete the `USNJRNL` volume. This technique is used by attackers to eliminate evidence of files created during post-exploitation activities.  |[Windows]  |1

|<<deleting-backup-catalogs-with-wbadmin, Deleting Backup Catalogs with Wbadmin>> |Identifies use of `wbadmin.exe` to delete the backup catalog. Ransomware and other malware may do this to prevent system recovery.  |[Windows]  |1

|<<direct-outbound-smb-connection, Direct Outbound SMB Connection>> |Identifies unexpected processes making network connections over port 445. Windows File Sharing is typically implemented over Server Message Block (SMB), which communicates between hosts using port 445. When legitimate, these network connections are established by the kernel. Processes making 445/tcp connections may be port scanners, exploits, or suspicious user-level processes moving laterally.  |[Windows]  |1

|<<disable-windows-firewall-rules-via-netsh, Disable Windows Firewall Rules via Netsh>> |Identifies use of `netsh.exe` to disable or weaken the local firewall. Attackers use this command line tool to disable the firewall during troubleshooting or to enable network mobility.  |[Windows]  |1

|<<encoding-or-decoding-files-via-certutil, Encoding or Decoding Files via CertUtil>> |Identifies the use of `certutil.exe` to encode or decode data. CertUtil is a native Windows component which is part of Certificate Services. CertUtil is often abused by attackers to encode or decode base64 data for stealthier command and control, and exfiltration.  |[Windows]  |1

|<<execution-via-regsvcs-regasm, Execution via Regsvcs/Regasm>> |Adversaries can use `regsvcs.exe` and `regasm.exe` to proxy execution of code through a trusted Windows utility.  |[D-SA] [Windows]  |1

|<<execution-via-scrcons, Execution via Scrcons>> |Identifies use of `scrcons.exe`, which is a Windows Management Instrumentation (WMI) Standard Event Consumer scripting application.  |[Windows]  |1

|<<execution-via-signed-binary, Execution via Signed Binary>> |Binaries signed with trusted digital certificates can execute on Windows systems protected by digital signature validation. Adversaries may use these binaries to _live off the land_ and execute malicious files that could bypass application whitelisting and signature validation.  |[Windows]  |1

|<<exploit-detected-elastic-endpoint, Exploit - Detected - Elastic Endpoint>> |Elastic Endpoint Security Alert - Exploit detected.  |[Endpoint]  |1

|<<exploit-prevented-elastic-endpoint, Exploit - Prevented - Elastic Endpoint>> |Elastic Endpoint Security Alert - Exploit prevented.  |[Endpoint]  |1

|<<ftp-file-transfer-protocol-activity-to-the-internet, FTP (File Transfer Protocol) Activity to the Internet>> |This rule detects events that may indicate the use of FTP network connections to the Internet. The File Transfer Protocol (FTP) has been around in its current form since the 1980s. It can be a common and efficient procedure on your network to send and receive files. Because of this, adversaries will also often use this protocol to ex-filtrate data from your network or download new tools. Additionally, FTP is a plain-text protocol which, if intercepted, may expose usernames and passwords. FTP activity involving servers subject to regulations or compliance standards may be unauthorized.  |[network]  |1

|<<hping-process-activity, Hping Process Activity>> |Hping ran on a Linux host. Hping is a FOSS command-line packet analyzer and has the ability to construct network packets for a wide variety of network security testing applications, including scanning and firewall auditing.  |[Linux]  |1

|<<ipsec-nat-traversal-port-activity, IPSEC NAT Traversal Port Activity>> |This rule detects events that could be describing IPSEC NAT Traversal traffic. IPSEC is a VPN technology that allows one system to talk to another using encrypted tunnels. NAT Traversal enables these tunnels to communicate over the Internet where one of the sides is behind a NAT router gateway. This may be common on your network, but this technique is also used by threat actors to avoid detection.  |[network]  |1

|<<irc-internet-relay-chat-protocol-activity-to-the-internet, IRC (Internet Relay Chat) Protocol Activity to the Internet>> |This signal detects events that use common ports for Internet Relay Chat (IRC) to the Internet. IRC is a common protocol that can be used for chat and file transfers. This protocol is also a good candidate for remote control of malware and data transfers to and from a network.  |[network]  |1

|<<indirect-command-execution, Indirect Command Execution>> |Various Windows utilities may be used to execute commands, possibly without invoking `cmd.exe`, including the Program Compatibility Assistant (`pcalua.exe`) and `forfiles.exe`.  |[D-SA] [Windows]  |1

|<<internet-explorer-spawning-cmd.exe, Internet Explorer spawning cmd.exe>> |Identifies a suspicious parent-child process relationship with `cmd.exe` spawning form Internet Explorer.  |[Windows]  |1

|<<ld.so-process-activity, Ld.so Process Activity>> |The dynamic linker, `ld.so`, runs in a privileged context and can be used to escape restrictive environments by spawning a shell to elevate privileges or move laterally.  |[Linux]  |1

|<<local-scheduled-task-commands, Local Scheduled Task Commands>> |A scheduled task can be used by an adversary to establish persistence, move laterally, and escalate privileges.  |[Windows]  |1

|<<local-service-commands, Local Service Commands>> |Identifies use of `sc.exe` to create, modify, or start services on remote hosts. This could be indicative of adversary lateral movement, but will be noisy if commonly done by admins.  |[Windows]  |1

|<<malware-detected-elastic-endpoint, Malware - Detected - Elastic Endpoint>> |Elastic Endpoint Security Alert - Malware detected.  |[Endpoint]  |1

|<<malware-prevented-elastic-endpoint, Malware - Prevented - Elastic Endpoint>> |Elastic Endpoint Security Alert - Malware prevented.  |[Endpoint]  |1

|<<mknod-process-activity, Mknod Process Activity>> |The Linux `mknod` program is sometimes used in the command payload of a remote command injection (RCI) and other exploits. It is used to export a command shell when the traditional version of `netcat` is not available to the payload.  |[Linux]  |1

|<<modification-of-boot-configuration, Modification of Boot Configuration>> |Identifies use of `bcdedit.exe` to delete boot configuration data. This tactic is sometimes used by malware or an attacker as a destructive technique.  |[Windows]  |1

|<<msbuild-making-network-connections, MsBuild Making Network Connections>> |Identifies `MSBuild.exe` making outbound network connections. This may indicate adversarial activity as MSBuild is often leveraged by adversaries to execute code and evade detection.  |[Windows]  |1

|<<net-command-via-system-account, Net command via SYSTEM account>> |Identifies attempts to create new users via the SYSTEM account.  |[Windows]  |1

|<<netcat-network-activity, Netcat Network Activity>> |A `netcat` process is engaging in network activity on a Linux host. Netcat is often used as a persistence mechanism by exporting a reverse shell or by serving a shell on a listening port. Netcat is also sometimes used for data exfiltration.  |[Linux]  |1

|<<network-connection-via-compiled-html-file, Network Connection via Compiled HTML File>> |Compiled HTML files (`.chm`) are commonly distributed as part of the Microsoft HTML Help system. Adversaries may conceal malicious code in a CHM file and deliver it to a victim for execution. CHM content is loaded by the HTML Help executable program (`hh.exe`).  |[Windows]  |1

|<<network-connection-via-msxsl, Network Connection via MsXsl>> |Identifies `msxsl.exe` making a network connection. This may indicate adversarial activity as `msxsl.exe` is often leveraged by adversaries to execute malicious scripts and evade detection.  |[Windows]  |1

|<<network-connection-via-mshta, Network Connection via Mshta>> |Identifies `mshta.exe` making a network connection. This may indicate adversarial activity as `mshta.exe` is often leveraged by adversaries to execute malicious scripts and evade detection.  |[Windows]  |1

|<<network-connection-via-regsvr, Network Connection via Regsvr>> |Identifies the native Windows tools `regsvr32.exe` and `regsvr64.exe` making a network connection. This may be indicative of an attacker bypassing whitelisting or running arbitrary scripts via a signed Microsoft binary.  |[Windows]  |1

|<<network-connection-via-signed-binary, Network Connection via Signed Binary>> |Binaries signed with trusted digital certificates can execute on Windows systems protected by digital signature validation. Adversaries may use these binaries to _live off the land_ and execute malicious files that could bypass application whitelisting and signature validation.  |[Windows]  |1

|<<network-sniffing-via-tcpdump, Network Sniffing via Tcpdump>> |The `tcpdump` program ran on a Linux host. `tcpdump` is a network monitoring or packet sniffing tool that can be used to capture insecure credentials or data in motion. Sniffing can also be used to discover details of network services as a prelude to lateral movement or defense evasion.  |[Linux]  |1

|<<nmap-process-activity, Nmap Process Activity>> |`Nmap` was executed on a Linux host. `Nmap` is a FOSS tool for network scanning and security testing. It can map and discover networks, and identify listening services and operating systems. It is sometimes used to gather information in support of exploitation, execution or lateral movement.  |[Linux]  |1

|<<nping-process-activity, Nping Process Activity>> |`Nping` ran on a Linux host. `Nping` is part of the `Nmap` tool suite and has the ability to construct raw packets for a wide variety of security testing applications, including denial of service testing.  |[Linux]  |1

|<<pptp-point-to-point-tunneling-protocol-activity, PPTP (Point to Point Tunneling Protocol) Activity>> |This rule detects events that may indicate use of a PPTP VPN connection. Some threat actors use these types of connections to tunnel their traffic while avoiding detection.  |[network]  |1

|<<permission-theft-detected-elastic-endpoint, Permission Theft - Detected - Elastic Endpoint>> |Elastic Endpoint Security Alert - Permission theft detected.  |[Endpoint]  |1

|<<permission-theft-prevented-elastic-endpoint, Permission Theft - Prevented - Elastic Endpoint>> |Elastic Endpoint Security Alert - Permission theft prevented.  |[Endpoint]  |1

|<<persistence-via-kernel-module-modification, Persistence via Kernel Module Modification>> |Identifies loadable kernel module errors, which are often indicative of potential persistence attempts.  |[Linux]  |1

|<<potential-application-shimming-via-sdbinst, Potential Application Shimming via Sdbinst>> |The Application Shim was created to allow for backward compatibility of software as the operating system codebase changes over time. This Windows functionality has been abused by attackers to stealthily gain persistence and execute arbitrary code in legitimate Windows processes.  |[D-SA] [Windows]  |1

|<<potential-dns-tunneling-via-iodine, Potential DNS Tunneling via Iodine>> |Iodine is a tool for tunneling Internet protocol version 4 (IPV4) traffic over the DNS protocol to circumvent firewalls, network security groups, and network access lists while evading detection.  |[Linux]  |1

|<<potential-download-via-signed-binary, Potential Download via Signed Binary>> |Binaries signed with trusted digital certificates can execute on Windows systems protected by digital signature validation. Adversaries may use these binaries to _live off the land_ and execute malicious files that could bypass application whitelisting and signature validation.  |[Windows]  |1

|<<potential-evasion-via-filter-manager, Potential Evasion via Filter Manager>> |The Filter Manager Control Program (`fltMC.exe`) binary may be abused by adversaries to unload a filter driver and evade defenses.  |[D-SA] [Windows]  |1

|<<potential-modification-of-accessibility-binaries, Potential Modification of Accessibility Binaries>> |Windows contains accessibility features that may be launched with a key combination before a user has logged in. An adversary can modify the way these programs are launched to get a command prompt or use a backdoor without logging in to the system.  |[D-SA] [Windows]  |1

|<<potential-shell-via-web-server, Potential Shell via Web Server>> |Identifies suspicious commands executed via a web server, which may suggest a vulnerability and remote shell access.  |[Linux]  |1

|<<powershell-spawning-cmd.exe, PowerShell spawning cmd.exe>> |Identifies a suspicious parent child process relationship with `cmd.exe` descending from `PowerShell.exe`.  |[Windows]  |1

|<<process-activity-via-compiled-html-file, Process Activity via Compiled HTML File>> |Compiled HTML files (`.chm`) are commonly distributed as part of the Microsoft HTML Help system. Adversaries may conceal malicious code in a CHM file and deliver it to a victim for execution. CHM content is loaded by the HTML Help executable program (`hh.exe`).  |[Windows]  |1

|<<process-discovery-via-tasklist, Process Discovery via Tasklist>> |Adversaries may attempt to get information about running processes on a system.  |[D-SA] [Windows]  |1

|<<process-injection-detected-elastic-endpoint, Process Injection - Detected - Elastic Endpoint>> |Elastic Endpoint Security Alert - Process injection detected.  |[Endpoint]  |1

|<<process-injection-prevented-elastic-endpoint, Process Injection - Prevented - Elastic Endpoint>> |Elastic Endpoint Security Alert - Process injection prevented.  |[Endpoint]  |1

|<<proxy-port-activity-to-the-internet, Proxy Port Activity to the Internet>> |This rule detects events that may describe network events using a proxy to access the Internet. It includes popular HTTP proxy ports and SOCKS proxy ports. Typically, environments use an internal IP address for a proxy server. It can also be used to circumvent network controls and detection mechanisms.  |[network]  |1

|<<psexec-network-connection, PsExec Network Connection>> |Identifies use of the SysInternals tool, `PsExec.exe`, making a network connection. This could be an indication of lateral movement.  |[Windows]  |1

|<<rdp-remote-desktop-protocol-from-the-internet, RDP (Remote Desktop Protocol) from the Internet>> |This signal detects network events that may indicate the use of RDP traffic from the Internet. RDP is commonly used by system administrators to remotely control a system for maintenance or to use shared resources. It should almost never be directly exposed to the Internet, as it is frequently targeted and exploited by threat actors as an initial access or back-door vector.  |[network]  |1

|<<rdp-remote-desktop-protocol-to-the-internet, RDP (Remote Desktop Protocol) to the Internet>> |This signal detects network events that may indicate the use of RDP traffic to the Internet. RDP is commonly used by system administrators to remotely control a system for maintenance or to use shared resources. It should almost never be directly exposed to the Internet, as it is frequently targeted and exploited by threat actors as an initial access or back-door vector.  |[network]  |1

|<<rpc-remote-procedure-call-from-the-internet, RPC (Remote Procedure Call) from the Internet>> |This signal detects network events that may indicate the use of RPC traffic from the Internet. RPC is commonly used by system administrators to remotely control a system for maintenance or to use shared resources. It should almost never be directly exposed to the Internet, as it is frequently targeted and exploited by threat actors as an initial access or back-door vector.  |[network]  |1

|<<rpc-remote-procedure-call-to-the-internet, RPC (Remote Procedure Call) to the Internet>> |This signal detects network events that may indicate the use of RPC traffic to the Internet. RPC is commonly used by system administrators to remotely control a system for maintenance or to use shared resources. It should almost never be directly exposed to the Internet, as it is frequently targeted and exploited by threat actors as an initial access or back-door vector.  |[network]  |1

|<<ransomware-detected-elastic-endpoint, Ransomware - Detected - Elastic Endpoint>> |Elastic Endpoint Security Alert - Ransomware detected.  |[Endpoint]  |1

|<<ransomware-prevented-elastic-endpoint, Ransomware - Prevented - Elastic Endpoint>> |Elastic Endpoint Security Alert - Ransomware prevented.  |[Endpoint]  |1

|<<smb-windows-file-sharing-activity-to-the-internet, SMB (Windows File Sharing) Activity to the Internet>> |This rule detects network events that may indicate the use of Windows file sharing (also called SMB or CIFS) traffic to the Internet. SMB is commonly used within networks to share files, printers, and other system resources amongst trusted systems. It should almost never be directly exposed to the Internet, as it is frequently targeted and exploited by threat actors as an initial access or back-door vector or for data exfiltration.  |[network]  |1

|<<smtp-on-port-26-tcp, SMTP on Port 26/TCP>> |This rule detects events that may indicate use of SMTP on TCP port 26. This port is commonly used by several popular mail transfer agents to deconflict with the default SMTP port 25. This port has also been used by a malware family called BadPatch for command and control of Windows systems.  |[network]  |1

|<<smtp-to-the-internet, SMTP to the Internet>> |This rule detects events that may describe SMTP traffic from internal hosts to a host across the Internet. In an enterprise network, there is typically a dedicated internal host that performs this function. It is also frequently abused by threat actors for command and control, and data exfiltration.  |[network]  |1

|<<sql-traffic-to-the-internet, SQL Traffic to the Internet>> |This rule detects events that may describe database traffic (MS SQL, Oracle, MySQL, and Postgresql) across the Internet. Databases should almost never be directly exposed to the Internet, as they are frequently targeted by threat actors to gain initial access to network resources.  |[network]  |1

|<<ssh-secure-shell-from-the-internet, SSH (Secure Shell) from the Internet>> |This signal detects network events that may indicate the use of SSH traffic from the Internet. SSH is commonly used by system administrators to remotely control a system using the command-line shell. If it is exposed to the Internet, it should be done with strong security controls as it is frequently targeted and exploited by threat actors as an initial access or back-door vector.  |[network]  |1

|<<ssh-secure-shell-to-the-internet, SSH (Secure Shell) to the Internet>> |This signal detects network events that may indicate the use of SSH traffic from the Internet. SSH is commonly used by system administrators to remotely control a system using the command-line shell. If it is exposed to the Internet, it should be done with strong security controls as it is frequently targeted and exploited by threat actors as an initial access or back-door vector.  |[network]  |1

|<<socat-process-activity, Socat Process Activity>> |A Socat process is running on a Linux host. Socat is often used as a persistence mechanism by exporting a reverse shell, or by serving a shell on a listening port. Socat is also sometimes used for lateral movement.  |[Linux]  |1

|<<strace-process-activity, Strace Process Activity>> |Strace runs in a privileged context and can be used to escape restrictive environments by instantiating a shell in order to elevate privileges or move laterally.  |[Linux]  |1

|<<suspicious-ms-office-child-process, Suspicious MS Office Child Process>> |Identifies suspicious child processes of frequently targeted Microsoft Office applications (Word, PowerPoint, Excel). These child processes are often launched during exploitation of Office applications or from documents with malicious macros.  |[Windows]  |1

|<<suspicious-ms-outlook-child-process, Suspicious MS Outlook Child Process>> |Identifies suspicious child processes of Microsoft Outlook. These child processes are often associated with spear phishing activity.  |[Windows]  |1

|<<suspicious-pdf-reader-child-process, Suspicious PDF Reader Child Process>> |Identifies suspicious child processes of PDF reader applications. These child processes are often launched via exploitation of PDF applications or social engineering.  |[Windows]  |1

|<<suspicious-process-spawning-from-script-interpreter, Suspicious Process Spawning from Script Interpreter>> |Identifies a suspicious process being spawned from a script interpreter, which could be indicative of a potential phishing attack.  |[Windows]  |1

|<<suspicious-script-object-execution, Suspicious Script Object Execution>> |Identifies `scrobj.dll` loaded into unusual Microsoft processes. This may indicate a malicious scriptlet is being executed in the target process.  |[Windows]  |1

|<<svchost-spawning-cmd.exe, Svchost spawning cmd.exe>> |Identifies a suspicious parent-child process relationship with `cmd.exe` descending from `svchost.exe`.  |[Windows]  |1

|<<system-shells-via-services, System Shells via Services>> |Windows services typically run as SYSTEM and can be used as a privilege escalation opportunity. Malware or penetration testers may run a shell as a service to gain SYSTEM permissions.  |[Windows]  |1

|<<tcp-port-8000-activity-to-the-internet, TCP Port 8000 Activity to the Internet>> |TCP Port 8000 is commonly used in development environments of web server software. It generally should not be exposed directly to the Internet. If you are running software like this on the Internet, you should consider placing it behind a reverse proxy.  |[network]  |1

|<<telnet-port-activity, Telnet Port Activity>> |This rule detects network events that may indicate the use of Telnet traffic. Telnet is commonly used by system administrators to remotely control older or embedded systems using the command-line shell. It should almost never be directly exposed to the Internet, as it is frequently targeted and exploited by threat actors as an initial access or back-door vector. As a plain-text protocol, it may also expose sensitive information.  |[network]  |1

|<<tor-activity-to-the-internet, Tor Activity to the Internet>> |This rule detects network events that may indicate the use of Tor traffic to the Internet. Tor is a network protocol that sends traffic through a series of encrypted tunnels used to conceal a user's location and network usage. Tor may be used by threat actors as an alternate communication pathway to conceal the actor's identity and avoid detection.  |[network]  |1

|<<trusted-developer-application-usage, Trusted Developer Application Usage>> |Identifies possibly suspicious activity using trusted Windows developer activity.  |[D-SA] [Windows]  |1

|<<unusual-network-connection-via-rundll32, Unusual Network Connection via RunDLL32>> |Identifies unusual instances of `rundll32.exe` making outbound network connections. This may indicate adversarial activity, and may identify malicious DLLs.  |[Windows]  |1

|<<unusual-parent-child-relationship, Unusual Parent-Child Relationship>> |Identifies Windows programs run from unexpected parent processes. This could indicate masquerading or other strange activity on a system.  |[Windows]  |1

|<<unusual-process-execution-temp, Unusual Process Execution - Temp>> |Identifies processes running in a temporary folder. This is sometimes done by adversaries to hide malware.  |[Linux]  |1

|<<unusual-process-network-connection, Unusual Process Network Connection>> |Identifies network activity from unexpected system applications. This may indicate adversarial activity as these applications are often leveraged by adversaries to execute code and evade detection.  |[Windows]  |1

|<<user-account-creation, User Account Creation>> |Identifies attempts to create new local users. This is sometimes done by attackers to increase access to a system or domain.  |[Windows]  |1

|<<user-added-to-administrator-group, User Added to Administrator Group>> |Identifies attempts to add a user to an administrative group with the `net.exe` command. This is sometimes done by attackers to increase access of a compromised account or create new account.  |[Windows]  |1

|<<user-discovery-via-whoami, User Discovery via Whoami>> |The `whoami` application was executed on a Linux host. This is often used by tools and persistence mechanisms to test for privileged access.  |[Linux]  |1

|<<vnc-virtual-network-computing-from-the-internet, VNC (Virtual Network Computing) from the Internet>> |This signal detects network events that may indicate the use of VNC traffic from the Internet. VNC is commonly used by system administrators to remotely control a system for maintenance or to use shared resources. It should almost never be directly exposed to the Internet, as it is frequently targeted and exploited by threat actors as an initial access or back-door vector.  |[network]  |1

|<<vnc-virtual-network-computing-to-the-internet, VNC (Virtual Network Computing) to the Internet>> |This signal detects network events that may indicate the use of VNC traffic to the Internet. VNC is commonly used by system administrators to remotely control a system for maintenance or to use shared resources. It should almost never be directly exposed to the Internet, as it is frequently targeted and exploited by threat actors as an initial access or back-door vector.  |[network]  |1

|<<volume-shadow-copy-deletion-via-vssadmin, Volume Shadow Copy Deletion via VssAdmin>> |Identifies use of `vssadmin.exe` for shadow copy deletion on endpoints. This commonly occurs in tandem with ransomware or other destructive attacks.  |[Windows]  |1

|<<volume-shadow-copy-deletion-via-wmic, Volume Shadow Copy Deletion via WMIC>> |Identifies use of `wmic.exe` for shadow copy deletion on endpoints. This commonly occurs in tandem with ransomware or other destructive attacks.  |[Windows]  |1

|<<wmic-command-lateral-movement, WMIC Command Lateral Movement>> |Identifies use of `wmic.exe` to run commands on remote hosts. This could be indicative of adversary lateral movement, but will be noisy if commonly done by admins.  |[Windows]  |1

|<<web-application-suspicious-activity-no-user-agent, Web Application Suspicious Activity: No User Agent>> |A request to a web application server contained no identifying user agent string.  |[APM]  |1

|<<web-application-suspicious-activity-post-request-declined, Web Application Suspicious Activity: POST Request Declined>> |A POST request to web application returned a 403 response, which indicates the web application declined to process the request because the action requested is not allowed.  |[APM]  |1

|<<web-application-suspicious-activity-unauthorized-method, Web Application Suspicious Activity: Unauthorized Method>> |A request to web application returned a 405 response which indicates the web application declined to process the request because the HTTP method is not allowed for the resource.  |[APM]  |1

|<<web-application-suspicious-activity-sqlmap-user-agent, Web Application Suspicious Activity: sqlmap User Agent>> |This is an example of how to detect an unwanted web client user agent. This search matches the user agent for `sqlmap 1.3.11,` which is a popular FOSS tool for testing web applications for SQL injection vulnerabilities.  |[APM]  |1

|<<whoami-process-activity, Whoami Process Activity>> |Identifies use of `whoami.exe`, which displays user, group, and privilege information for the user who is currently logged on to the local system.  |[Windows]  |1

|<<windows-script-executing-powershell, Windows Script Executing PowerShell>> |Identifies a PowerShell process launched by either `cscript.exe` or `wscript.exe`. Windows scripting processes executing a PowerShell script may be indicative of malicious activity.  |[Windows]  |1

|==============================================